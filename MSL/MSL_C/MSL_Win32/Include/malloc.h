/*  Metrowerks Standard Library  *//*  $Date: 2000/04/13 19:10:59 $  *  $Revision: 1.6.12.2 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. */ /* *	malloc.h * *		This file was built to correspond with the Visual C++ malloc.h */ #ifndef __malloc_h__ #define __malloc_h__ /* for C++, define inline function rather than macro to expose _msize */#include <cstdlib>#ifdef __cplusplusinline __std(size_t) _msize(void * ptr){	return __std(__msize)(ptr);}#else#define _msize __msize#endif/* we cannot expose _alloca using an inline function because we cannot * guarentee that the function will be inlined, and __alloca must be called * in the correct stack frame -- if not, the space it allocates will be * released upon return to the caller -- we do expose both _alloca and * __alloca as both are recognized by the compiler as forms of __alloca */#ifdef __cplusplusextern "C" {#endif_MSL_IMP_EXP_C char * _alloca(__std(size_t) size);_MSL_IMP_EXP_C char * __alloca(__std(size_t) size);#ifdef __cplusplus}#endif#define alloca __alloca/* * blc 990209  added _msize macro and inline function, removed prototype for *             __alloca, as its always an intrinsic on Intel platforms * blc 990216  removed needless namespace definitions, changed alloca to *             have prototype for both forms, with macro for non-underscore *             form. * blc 990217  fixed C compilation error due to illegal 'extern "C"' keywords * blc 990331  fix IL9903-2601 -- left off __std() macro around call to __msize */#endif /* __malloc_h__ *//* *  cc 000316 added _MSL_IMP_EXP_C */