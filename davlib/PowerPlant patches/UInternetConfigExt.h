/*	UInternetConfigExt.h	Copyright (C) 2000 i-drive.com (email: opensource@mail.idrive.com)	This library is free software; you can redistribute it and/or	modify it under the terms of version 2.1 of the GNU Lesser General	Public License as published by the Free Software Foundation.	This library is distributed in the hope that it will be useful,	but WITHOUT ANY WARRANTY; without even the implied warranty of	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU	Lesser General Public License for more details.	You should have received a copy of the GNU Lesser General Public	License along with this library; if not, write to the Free Software	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA*/#include <UInternetConfig.h>#include <string>#include <map>class UInternetConfigExt : public UInternetConfig{public:	static bool 		PP_GetProxy (std::string& server, SInt32& port);	static bool 		MapMIMEtoMac (const std::string& MIMEType, OSType &type, OSType& creator);	static bool 		MapMactoMIME (OSType type, OSType creator, std::string& MIMEType);	static void 		GetMimeMap (void);	static std::string	MapToMIME (OSType fType, OSType fCreator, ConstStr255Param filename);	static void			MapToMacType (const std::string& mimeType, const std::string& filename, OSType &fType, OSType &fCreator);	class CMacType	{	public:		CMacType (OSType type = 0, OSType creator = 0) {mType = type; mCreator = creator;}		operator< (const CMacType& other) const		{			if (mType < other.mType)				return true;			else				return (mCreator < other.mCreator);		};	private:		friend class UInternetConfigExt;		OSType	mType;		OSType	mCreator;	};	protected:	static std::map<const std::string, CMacType> *sMimeMacMap;#if 0	static std::map<const CMacType, std::string> *sMacMimeMap;#endif	private:	static unsigned short getUShort (const void* src);	static unsigned long getULong (const void* src);	static const UInt8* getMimePtr (const ICMapEntry *);};