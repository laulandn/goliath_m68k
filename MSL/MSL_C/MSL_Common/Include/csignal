/*  Metrowerks Standard Library  *//*  $Date: 2000/04/13 19:20:33 $  *  $Revision: 1.7.18.3 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. *//* *	csignal            hh  971206 filename used to be signal.h */#ifndef __csignal__#define __csignal__#include <ansi_parms.h>#ifndef RC_INVOKED   /* hh 971230 */#pragma options align=native#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import on#endif#ifdef __cplusplus            /* hh  971206 */	#ifdef _MSL_USING_NAMESPACE		namespace std {	#endif	extern "C" {#endiftypedef  int	sig_atomic_t;typedef  void  (* __signal_func_ptr)(int);_MSL_IMP_EXP_C __signal_func_ptr	signal(int  signal, __signal_func_ptr signal_func);_MSL_IMP_EXP_C 			   int	raise (int  signal);#define SIG_DFL	((__std(__signal_func_ptr))  0)#define SIG_IGN	((__std(__signal_func_ptr))  1)#define SIG_ERR	((__std(__signal_func_ptr)) -1)#ifdef __cplusplus           /* hh  971206 */	}	#ifdef _MSL_USING_NAMESPACE		}	#endif#endif#if __dest_os == __be_os	#include <signal.be.h>#else	#define SIGABRT		1	#define SIGFPE		2	#define SIGILL		3	#define SIGINT		4	#define SIGSEGV		5	#define SIGTERM		6		#define __signal_max	6#endif#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import reset#endif#pragma options align=reset#endif /* RC_INVOKED */#endif /* __csignal__ *//*     Change record * hh  971206 Changed filename from signal.h to csignal and added namespace support. * hh 971230 added RC_INVOKED wrapper*/