/*	ProfilerMPHelper.h		These are helper routines for the profiler under MP.  This file should be included	in all files that call:		MPCreateTask(), MPTerminateTask(), MPWaitOnQueue(), MPWaitOnSemaphore() and	MPEnterCriticalRegion().		They help the profiler adjust the timings from the main task.		Copyright © 1996-2002 Metrowerks Corporation.  All rights reserved. */#ifndef __PROFILERMPHELPER__#define __PROFILERMPHELPER__#ifndef __MULTIPROCESSING__#include <Multiprocessing.h>#endif#if __profile__ || USEMP		#ifdef __cplusplus		extern "C" {	#endif		extern OSStatus _PROFILE_MPCreateTask(		TaskProc			entryPoint,		void				*parameter,		ByteCount			stackSize,		MPQueueID			notifyQueue,		void				*terminationParameter1,		void				*terminationParameter2,		MPTaskOptions		options,		MPTaskID			*task);		extern OSStatus _PROFILE_MPTerminateTask(		MPTaskID			task,		OSStatus			terminationStatus);		extern void _PROFILE_MPExit(		OSStatus status);		extern OSStatus _PROFILE_MPWaitOnQueue(		MPQueueID queue,		void				**param1,		void				**param2,		void				**param3,		Duration			timeout);		extern OSStatus _PROFILE_MPWaitOnSemaphore(		MPSemaphoreID		semaphore,		Duration			timeout);		extern OSStatus _PROFILE_MPEnterCriticalRegion(		MPCriticalRegionID	criticalRegion,		Duration			timeout);		/* ----- */		#define MPCreateTask(_a, _b, _c, _d, _e, _f, _g, _h) \		_PROFILE_MPCreateTask((_a), (_b), (_c), (_d), (_e), (_f), (_g), (_h))		#define MPTerminateTask(_a, _b) \		_PROFILE_MPTerminateTask((_a), (_b))		#define MPExit(_a) \		_PROFILE_MPExit((_a))		#define MPWaitOnQueue(_a, _b, _c, _d, _e) \		_PROFILE_MPWaitOnQueue((_a), (_b), (_c), (_d), (_e))		#define MPWaitOnSemaphore(_a, _b) \		_PROFILE_MPWaitOnSemaphore((_a), (_b))		#define MPEnterCriticalRegion(_a, _b) \		_PROFILE_MPEnterCriticalRegion((_a), (_b))		#ifdef __cplusplus		}	#endif#endif // __profile__#endif // __PROFILERMPHELPER__