/* ================================================================================================== * ExternalEditContext.h															    *    Goliath - a Finder like application that implements WebDAV *    Copyright (C) 1999-2002  Thomas Bednarz * *    This program is free software; you can redistribute it and/or modify *    it under the terms of the GNU General Public License as published by *    the Free Software Foundation; either version 2 of the License, or *    (at your option) any later version. * *    This program is distributed in the hope that it will be useful, *    but WITHOUT ANY WARRANTY; without even the implied warranty of *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *    GNU General Public License for more details. * *    You should have received a copy of the GNU General Public License *    along with this program; if not, write to the Free Software Foundation, *    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * *  For questions, suggestions, bug-reports, enhancement-requests etc. *  I may be contacted at: * *  tombednarz@hotmail.com * =========================================================================== */#ifndef __ExternalEditContext_h__#define __ExternalEditContext_h__#include <string>#include <memory>class CDAVContext;class CDAVTableWindow;class CDAVTable;class ExternalEditContext {	public:		ExternalEditContext(const CDAVContext* inContext, const std::string& inTheURL, const FSSpec& inTheSpec, const CDAVTableWindow* inTableWindow, bool encodeRes);		ExternalEditContext(const CDAVContext* inContext, const std::string& inTheURL, const FSSpec& inTheSpec, bool encodeRes, UInt32 inLastModTime);		virtual ~ExternalEditContext();				bool FileHasChanged();		void ResetFileEditTime();				const FSSpec* GetFSSpec() {return &mFileSpec;};		const std::string& GetURL() {return mURL;};		CDAVContext* GetContext() {return mContext.get();};		const CDAVTableWindow* GetWnd() const {return mOriginatingWnd;};		const bool GetEncodeResources() const {return mEncodingDisabled;};				bool IsSameResource(const std::string& inServer, const std::string& inURI);				static UInt32 GetFSSpecModDate(FSSpec& inSpec);	protected:				std::string 					mURL;		FSSpec 							mFileSpec;		std::auto_ptr<CDAVContext>		mContext;		UInt32							mLastEditTime;		const CDAVTableWindow*			mOriginatingWnd;		const bool						mEncodingDisabled;				};#endif