// ===========================================================================//	CustomTextColorCDEF.h		PowerPlant 2.1		©1998-1999 Metrowerks Inc.// ===========================================================================#ifndef _H_CustomTextColorCDEF#define _H_CustomTextColorCDEF#pragma once#include <Controls.h>// ---------------------------------------------------------------------------//	Constantsconst SInt16	CDEF_CustomTextColor		= 83;const SInt16	CDEFProc_CustomTextColor	= 16 * CDEF_CustomTextColor;// ---------------------------------------------------------------------------//	Function Prototype for CDEF main entry pointpascal long CustomTextColorCDEFmain(	SInt16					inVarCode,	ControlHandle			inMacControlH,	ControlDefProcMessage	inMessage,	SInt32					inParam);// ---------------------------------------------------------------------------//	Standard declarations for Universal ProcPtrstypedef CALLBACK_API(void , CustomTextColorProcPtr) (						ControlHandle				control,						ControlApplyTextColorPtr	info);#if TARGET_API_MAC_CARBON		// Under Carbon, we can just use function pointers	typedef	CustomTextColorProcPtr CustomTextColorUPP;	#define CallCustomTextColorProc(userRoutine, control, info)				\						(*(userRoutine))((control), (ControlApplyTextColorPtr)(info))#else	typedef STACK_UPP_TYPE(CustomTextColorProcPtr) 		CustomTextColorUPP; 							// pascal no_return_value Func(4_bytes, 4_bytes)	enum { uppCustomTextColorProcInfo = 0x000003C0 };	#define NewCustomTextColorProc(userRoutine)								\					(CustomTextColorUPP) NewRoutineDescriptor(				\											(ProcPtr) (userRoutine),		\											uppCustomTextColorProcInfo,		\											GetCurrentArchitecture())	#define CallCustomTextColorProc(userRoutine, control, info)				\					CALL_TWO_PARAMETER_UPP( (userRoutine),					\											uppCustomTextColorProcInfo,		\											(control),						\											(info))#endif#endif