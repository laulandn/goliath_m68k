/*  Metrowerks Standard Library   *//*  $Date: 2000/04/13 19:20:50 $  *  $Revision: 1.7.18.6 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. */ #ifndef	_FCNTL#define	_FCNTL#include <ansi_parms.h>  /* m.f. 042898 */#define O_TEXT			0x0			/* 960827: Added this for Visual C++ compatibility. */#define O_RDWR			0x1			/* open the file in read/write mode */	/* mm 980420 */#define O_RDONLY		0x2			/* open the file in read only mode */	/* mm 980420 */#define O_WRONLY		0x4			/* open the file in write only mode */	/* mm 980420 */#define O_APPEND		0x0100		/* open the file in append mode */#define O_CREAT			0x0200		/* create the file if it doesn't exist */#define O_EXCL			0x0400		/* if the file already exists don't create it again */#define O_TRUNC			0x0800		/* truncate the file after opening it */#define O_NRESOLVE		0x1000		/* Don't resolve any aliases */#define O_ALIAS			0x2000		/* Open alias file (if the file is an alias) */#define O_RSRC 			0x4000		/* Open the resource fork */#define O_BINARY		0x8000		/* open the file in binary mode (default is text mode) */#define F_DUPFD			0x0			/* return a duplicate file descriptor */#pragma options align=native#if !defined(__dest_os)                 #error __dest_os undefined #endif                                            /*MW-mm 960927a*/#if __dest_os == __mac_os	#ifndef	_STAT	#	include <stat.mac.h> /*961216 bkoz for mode_t*/	#endif#elif (__dest_os == __win32_os || __dest_os == __wince_os)	#ifndef	_STAT	#	include <stat.win32.h> /* mm 971129 for mode_t*/	#endif#elif __dest_os == __be_os                         /* mm 970708 */#	include <fcntl.be.h>                           /* mm 970708 */#endif#pragma options align=native#ifdef __cplusplus	extern "C" {#endif_MSL_IMP_EXP_C int _open(const char *, int , ...);  /*  vss  980729  */_MSL_IMP_EXP_C int _creat(const char *, mode_t);_MSL_IMP_EXP_C int _fcntl(int , int , ...);#ifdef _POSIX	extern __inline  int open(const char *_a, int _b, ... )     {return  _open(_a, _b) ;} 	extern __inline  int creat(const char * _a, mode_t _b,...)  {return  _creat( _a, _b) ;} 	extern __inline  int fcntl(int _a, int _b, ... )    		{return _fcntl(_a, _b)  ;} #endif  #ifdef __cplusplus	}#endif#endif/*     Change record * MW-mm 960927a Inserted setting of __dest_os to __mac_os when not otherwise set. * mm 970708  Inserted Be changes * mf 980428  included ansi_parms.h and use #error instead of mac_os by default * cc 000403  changed inline of open, create, & fcntl to have  _b ,...  */