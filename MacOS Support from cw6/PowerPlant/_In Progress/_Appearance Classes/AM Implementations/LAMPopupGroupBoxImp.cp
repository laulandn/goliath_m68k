// ===========================================================================//	LAMPopupGroupBoxImp.cp		PowerPlant 2.1		©1997-1999 Metrowerks Inc.// ===========================================================================#ifdef PowerPlant_PCH	#include PowerPlant_PCH#endif#include <LAMPopupGroupBoxImp.h>#include <LPopupGroupBox.h>#include <UDrawingState.h>#include <UTBAccessors.h>PP_Begin_Namespace_PowerPlant// ---------------------------------------------------------------------------//	¥ LAMPopupGroupBoxImp				Stream/Default Constructor	  [public]// ---------------------------------------------------------------------------//	Do not access inStream. It may be nil. Read Stream data in Init()LAMPopupGroupBoxImp::LAMPopupGroupBoxImp(	LStream*	inStream)	: LAMPopupButtonImp(inStream){	mMenuHandleTag = kControlGroupBoxMenuHandleTag;}// ---------------------------------------------------------------------------//	¥ ~LAMPopupGroupBoxImp					Destructor				  [public]// ---------------------------------------------------------------------------LAMPopupGroupBoxImp::~LAMPopupGroupBoxImp(){}// ---------------------------------------------------------------------------//	¥ FinishCreateSelf												  [public]// ---------------------------------------------------------------------------voidLAMPopupGroupBoxImp::FinishCreateSelf(){	AlignControlRect();}#pragma mark -// ---------------------------------------------------------------------------//	¥ SetDescriptor													  [public]// ---------------------------------------------------------------------------//	Set title of the group's popup menuvoidLAMPopupGroupBoxImp::SetDescriptor(	ConstStringPtr	inDescriptor){		// SetControlTitle() automatically redraws the control. For		// ControlViews, this erases its contents, obscuring its		// subpanes. To workaround this, we suppress drawing when		// calling SetControlTitle(), then force a redraw of the		// entire view.	mControlPane->FocusDraw();	{		StClipRgnState	emptyClip(nil);		::SetControlTitle(mMacControlH, inDescriptor);	}	mControlPane->Draw(nil);}// ---------------------------------------------------------------------------//	¥ AdjustControlBounds										   [protected]// ---------------------------------------------------------------------------voidLAMPopupGroupBoxImp::AdjustControlBounds(	Rect&	ioBounds){			// PopupGroupBox control extends one pixel above the			// ControlRect. So me move the top of the ControlRect			// down one pixel so that the controls draws entirely			// within the Frame of our ControlPane.	ioBounds.top += 1;}// ---------------------------------------------------------------------------//	¥ GetMacMenuH												   [protected]// ---------------------------------------------------------------------------MenuHandleLAMPopupGroupBoxImp::GetMacMenuH() const{	MenuHandle	menuH = nil;	LPopupGroupBox*	box =				dynamic_cast<LPopupGroupBox*>(mControlPane->GetSuperView());	if (box != nil) {		menuH = box->GetMacMenuH();	}	return menuH;}PP_End_Namespace_PowerPlant