/*  Metrowerks Standard Library  *//*  $Date: 2000/07/11 21:18:46 $  *  $Revision: 1.12.2.1.6.4.2.1 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. *//* *	critical_regions.h * *		Notes *		----- * *			What we need in certain areas of the library is the ability to "lock" *			certain critical regions of code against reentrance by preemptive *			threads. For example, when fopen searches for an unused FILE struct, it *			would be unfortunate if another thread "found" the same struct before the *			first one could mark it as in-use. *			 *			Because the mechanisms used to manage critical regions will vary widely *			depending on the underlying hardware and/or system software, *all* *			details about how critical regions are locked and released are kept *			hidden. Instead, we define a finite number of critical regions that are *			of interest to us and leave the details of how they are managed invisible. */#ifndef __critical_regions__#define __critical_regions__#include <ansi_parms.h>#pragma options align=nativeenum critical_regions {	atexit_funcs_access		=0,	malloc_pool_access		=1,	files_access			=2,	console_status_access	=3,	signal_funcs_access		=4,	thread_access			=5,	num_critical_regions	=6};#if _MWMT	#if __dest_os == __win32_os  		# include <critical_regions.win32.h>	#elif __dest_os == __mac_os		# include <critical_regions.macos.h>	#endif /* __dest_os */	#else	# define  __init_critical_regions()	# define  __kill_critical_regions()	# define  __begin_critical_region(x) 	# define  __end_critical_region(x) #endif /*  _MWMT */#pragma options align=reset#endif/*     Change record *hh 971206  expanded _extern macro  mf 980515  wince changes  mf 030199  single threaded lib changes  hh 990830  Made macros out of __init/__kill_critical_regions on Mac to uncouple              MSL C and PPC runtime lib.  mf 000710  added critical region protection for global thread list*/