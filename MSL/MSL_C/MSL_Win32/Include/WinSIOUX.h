/*  Metrowerks Standard Library  *//*  $Date: 2000/04/13 19:11:11 $  *  $Revision: 1.3.8.4 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. *//*******************************************************************************//*  Project...: C++ and ANSI-C Compiler Environment                     ********//*  Name......: WinSIOUX.h                                       		********//*  Purpose...: Interface functions to SIOUX for Windows			    ********//*******************************************************************************//**/#ifndef __WINSIOUX_H__#define __WINSIOUX_H__/*#define _WCHAR_T_DEFINED#define _SIZE_T_DEFINED#define _WINSIOUX 1#include <x86_prefix.h>#define __dest_os	__win32_os*/#define _WINSIOUX 1#include <ansi_parms.h>#ifdef __cplusplus								/* mm 981106 */ /* mm 991217 */	extern "C" {								/* mm 981106 */ /* mm 991217 */#endif 											/* mm 981106 */ /* mm 991217 */typedef struct tSIOUXBuffer {	char	   *startpos,	/* pointer to a block of memory that will serve as the buffer  */			   *curtop,     /* pointer to start of line at top of screen                   */			   *endpos,		/* pointer to end of text in the buffer                        */			   *inputstart,	/* pointer to a block of memory as keyboard input buffer       */			   *inputcur,   /* pointer to next available character of input                */			   *inputlast,  /* pointer to character after last input character             */			   *SelBasePtr,	/* pointer to where selection began, may be start or end       */			   *SelStartPtr,/* pointer to start of selected text						   */			   *SelEndPtr;  /* pointer to end of selected text						   	   */	int         WindowHeight,       /* Height of WinSIOUX console  */	            WindowWidth;        /* Widtht of WinSIOUX console  */	int			row, maxrow;/* row index of current insert point and max num of rows       */	int			col, maxcol;/* column index of current insert point and max num of cols    */	int         VscrollPos; /* Vert scroll button posn     */	int         installed;  /* true if console has been installed                          */	int         inputavail; /* true if input is available for program                      */	int         dirtybit;   /* true if buffer changed since last saving                    */	int         NeedInput; 	/* true if characters to be stored at caret position           */	int         CmdShow;	int         numlines;   /* Number of text lines in buffer                              */	long        bufsize;    /* Current buffer size                                         */} tSIOUXBuffer;#define IDM_NEW				10#define IDM_OPEN			11#define IDM_CLOSE			12#define IDM_SAVE			13#define IDM_PRINT			14#define IDM_EXIT			15#define IDM_UNDO			16#define IDM_CUT				17#define IDM_COPY			18#define IDM_PASTE			19#define IDM_ALL				20#define _MAX_EXT_LEN   		 4#define EZ_ATTR_BOLD          1#define EZ_ATTR_ITALIC        2#define EZ_ATTR_UNDERLINE     4#define EZ_ATTR_STRIKEOUT     8typedef struct tSIOUXSettings {	char	initializeTB,			/* Initialize the ToolBox?                    TRUE   */			standalone,				/* SIOUX running in standalone mode?          TRUE   */			setupmenus,				/* Draw the SIOUX menus?                      TRUE   */			autocloseonquit,		/* Close SIOUX window on program termination? FALSE  */			asktosaveonclose,		/* Offer to save on a close?                  TRUE   */			showstatusline;			/* Draw the status line?                      FALSE  */	short	tabspaces,				/* Replace tabs with 'tabspaces' spaces       4      */			columns,                /* Initial number of columns in window        80     */			rows,					/* Initial number of rows in window           24     */			toppixel,               /* Pixel posn of window on main screen         0     */			leftpixel;				/* The topleft window position (in pixels)     0     */									/* 	(0,0 centers on main screen)                     */	char    fontname[32];           /*                                            courier*/	short   fontsize,               /*                                            9      */   			fontface;               /*                                            normal */   } tSIOUXSettings;extern tSIOUXSettings	SIOUXSettings;		/* SIOUX's settings structure ... *//*                                                       *  void WinSIOUXclrscr(void); * *  Clear the WinSIOUX screen and empty the WinSIOUXBuffer. * */_MSL_IMP_EXP_SIOUX void  WriteCharsToConsole(const char *, long);						/* mm 990423 */_MSL_IMP_EXP_SIOUX int   ReadCharsFromConsole(void *, unsigned long, unsigned long*);	/* mm 990423 */_MSL_IMP_EXP_SIOUX void  WinSIOUXclrscr(void);_MSL_IMP_EXP_SIOUX void  clrscr(void);_MSL_IMP_EXP_SIOUX void  WinSIOUXAbort();												/* mm 981109 */#ifdef __cplusplus													/* mm 981106 */	}																/* mm 981106 */#endif 																/* mm 981106 */#endif /* __WINSIOUX_H__ *//* Change record * mm 980411 Expanded to contain declaration of SIOUXBuffer structure * mm 980528 Added SIOUXBuffer.SelBasePtr to allow mouse selection both up and down. * mm 981106 Made clrscr() and WinSIOUXclrscr() visible in C++---WB1-2229 * mm 981109 Added declaration of WinSIOUXAbort. * mm 990423 Added declarations for WriteCharsToConsole and ReadCharsFromConsole * mm 991217 Moved extern C to make SIOUXBuffer and SIOUXSettings visible in C++ */