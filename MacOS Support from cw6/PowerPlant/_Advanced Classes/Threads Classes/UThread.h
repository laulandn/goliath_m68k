// ===========================================================================//	UThread.h					PowerPlant 2.1		©1994-1999 Metrowerks Inc.// ===========================================================================//	Original Author: Paul Lalonde#ifndef _H_UThread#define _H_UThread#pragma once#include <LAttachment.h>#if PP_Uses_Pragma_Import	#pragma import on#endifPP_Begin_Namespace_PowerPlant// forward class declarationsclass	LMutexSemaphore;// ===========================================================================// ¥ StCritical													  StCritical ¥// ===========================================================================class StCritical{public:	StCritical();	~StCritical();};// ===========================================================================// ¥ StMutex														 StMutex ¥// ===========================================================================class StMutex{public:	StMutex(LMutexSemaphore& inMutex);	~StMutex();private:	LMutexSemaphore&	mMutex;};// ===========================================================================// ¥ LYieldAttachment										LYieldAttachment ¥// ===========================================================================class LYieldAttachment : public LAttachment{public:					LYieldAttachment(SInt32 inQuantum = -1);protected:	virtual	void	ExecuteSelf(MessageT inMessage, void* ioParam);	SInt32			mQuantum;	UInt32			mNextTicks;};PP_End_Namespace_PowerPlant#if PP_Uses_Pragma_Import	#pragma import reset#endif#endif	// _H_UThread