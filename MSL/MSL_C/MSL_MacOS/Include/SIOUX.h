/*  Metrowerks Standard Library  *//*  $Date: 2000/04/17 20:06:12 $  *  $Revision: 1.3.10.3 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. *//* *	File:		SIOUX.h * *	Content:	Interface file for SIOUX, containing all accessible entries ... * */#ifndef __SIOUX__#define __SIOUX__#include <ansi_parms.h>            /* mm 970903 */#if __MOTO__#include <Events.h>#endif#pragma options align=mac68k/* #pragma direct_destruction off */  /*  980807 vss  *//* *	Structure for holding the SIOUX specific settings ... *	default values are: *		{TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, NULL, 4, 80, 24, 0, 0, monaco, 9, normal, *			TRUE, TRUE,	FALSE, 0};	// SIOUX-WE specific */typedef struct tSIOUXSettings {	char		 	initializeTB,			/* Do we initialize the ToolBox ... */					standalone,				/* Is SIOUX running in standalone mode ... */					setupmenus,				/* Do we draw the SIOUX menus ... */					autocloseonquit,		/* Do we close the SIOUX window on program termination ... */					asktosaveonclose,		/* Do we offer to save on a close ... */					showstatusline;			/* Do we draw the status line ... */	unsigned char  	*userwindowtitle;		/* Pointer to window title preset by user mm 980609 */	short			tabspaces,				/* if non-zero, replace tabs with 'tabspaces' spaces ... */					columns, rows,			/* The initial size of the SIOUX window ... */					toppixel, leftpixel,	/* The topleft window position (in pixels) ... */											/* 	(0,0 centers on main screen) ... */					fontid, fontsize,					fontface;				/* SIOUX's font, size and textface (i.e. bold, etc...) ... */	/* SIOUX-WE specific settings -- these will have no effect on a non-SIOUX-WE project */	char			enabledraganddrop,	/* WASTE will use Drag and Drop, if available 			*/					outlinehilite,			/* if false, selections in a non-active window will	*/												/* not be outlined--the selection "disappears".			*/												/* if enabledraganddrop == true, this feature will be	*/												/* activated no matter the value of outlinehilite		*/					wasteusetempmemory;			/* tell WASTE to allocate its main data structures from temporary memory *//*	long			wastemaxbuffersize; /* setting to limit the size of the WASTE text. Not yet implemented */} tSIOUXSettings;_MSL_IMP_EXP_SIOUX extern tSIOUXSettings	SIOUXSettings;	/* SIOUX's settings structure ... */#ifdef __cplusplusextern "C" {#endif/* *	extern short SIOUXHandleOneEvent(EventRecord *initialevent); * *	Tells SIOUX to handle one event.  If initialevent is NULL, then SIOUX *	will poll the eventqueue for an event.  For applications which wish to *	use an embedded SIOUX window, call this function at the beginning of *	your eventloop, and pass it your current event ... * *	EventRecord *userevent:	The user's event from their call to Get/WaitNextEvent. *	returns short:			Was the event handled by SIOUX? */_MSL_IMP_EXP_SIOUX extern short SIOUXHandleOneEvent(struct EventRecord *userevent);/* *	extern void SIOUXSetTitle(unsigned char title[256]); * *	Change the SIOUX window's title ... * *	unsigned char title[256]:	contains a pascal string. */_MSL_IMP_EXP_SIOUX extern void SIOUXSetTitle(unsigned char title[256]); #ifdef __cplusplus}#endif#pragma options align=reset/* #pragma direct_destruction reset  */  /* vss 980807 */#endif/*     Change record * mm 970903  Added #include <ansi_parms.h> * mm 980427  Addec SIOUXclrscr  MW06842 * mm 980609  Change that allows user to specify window title before the SIOUX window is created. * vss 980807 remove pragma  - no longer supported by compiler * mm 981218  Removed mm 980427 change	*/