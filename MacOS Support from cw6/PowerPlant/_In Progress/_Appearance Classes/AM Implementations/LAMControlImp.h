// ===========================================================================//	LAMControlImp.h				PowerPlant 2.1		©1997-1999 Metrowerks Inc.// ===========================================================================#ifndef _H_LAMControlImp#define _H_LAMControlImp#pragma once#include <LStdControlImp.h>#if PP_Uses_Pragma_Import	#pragma import on#endifPP_Begin_Namespace_PowerPlant// ---------------------------------------------------------------------------class	LAMControlImp : public LStdControlImp {public:						LAMControlImp(								LStream*		inStream = nil);	virtual				~LAMControlImp();	virtual Boolean		TrackHotSpot(								SInt16			inHotSpot,								Point			inPoint,								SInt16			inModifiers);	virtual void		SetDescriptor(								ConstStringPtr	inDescriptor);	virtual void		SetValue(								SInt32			inValue);	virtual void		SetMinValue(								SInt32			inMinValue);	virtual void		SetMaxValue(								SInt32			inMaxValue);	virtual void		DrawSelf();	virtual void		ShowSelf();	virtual void		HideSelf();	virtual void		ActivateSelf();	virtual void		DeactivateSelf();	virtual void		EnableSelf();	virtual void		DisableSelf();	virtual void		SetDataTag(								SInt16			inPartCode,								FourCharCode	inTag,								Size			inDataSize,								void*			inDataPtr);	virtual void		GetDataTag(								SInt16			inPartCode,								FourCharCode	inTag,								Size			inBufferSize,								void*			inBuffer,								Size*			outDataSize = nil) const;	virtual void		SetTextTraitsID(								ResIDT			inTextTraitsID);	virtual void		SetFontStyle(								const ControlFontStyleRec&	inStyleRec);	virtual void		GetFontStyle(								ControlFontStyleRec&	outStyleRec) const;	virtual void		SetScrollViewSize(								SInt32			inViewSize);	virtual	void		Idle();	virtual SInt16		DoKeyPress(								const EventRecord&	inKeyEvent);	virtual void		BeTarget(								ControlFocusPart	inFocusPart);	virtual void		DontBeTarget();	virtual bool		SetKeyboardFocusPart(								ControlFocusPart	inFocusPart);	virtual void		ApplyTextColor(								SInt16			inDepth,								bool			inHasColor,								bool			inIsActive);	static LAMControlImp*	sControlImpBeingDrawn;protected:	virtual void		MakeMacControl(								ConstStringPtr	inTitle,								SInt32			inRefCon);	ControlHandle		MakeCustomTextColorControl(								WindowPtr		inMacWindow,								ControlHandle	inRootControl);	virtual void		RefreshControlPane();};PP_End_Namespace_PowerPlant#if PP_Uses_Pragma_Import	#pragma import reset#endif#endif