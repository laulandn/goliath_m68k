/*  Metrowerks Standard Library  *//*  $Date: 2000/05/24 20:03:11 $  *  $Revision: 1.1.2.1 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. */ /* *	critical_regions.mac.h *	 *	Routines *	-------- *		__init_critical_regions *		__begin_critical_region *		__end_critical_region * *	Implementation *	-------------- * *		For the Mac, these routines are mere stubs. The Thread Manager doesn't *		support preemptive threads and the ANSI library code will never yield *		cooperatively - ever, much less during critical regions. Interrupt-level *		exclusion is not addressed because it is too fraught with the danger of *		deadlock. * * */#include <Multiprocessing.h>#ifdef __cplusplus               	extern "C" {#endif/*static MPCriticalRegionID __cs[num_critical_regions];*/_MSL_IMP_EXP_C extern MPCriticalRegionID __cs[num_critical_regions];__inline void __init_critical_regions(void){	int i;	for (i = 0; i < num_critical_regions; i++)		MPCreateCriticalRegion(&__cs[i]);}__inline void __kill_critical_regions(void){	int i;	for (i = 0; i < num_critical_regions; i++)		MPDeleteCriticalRegion(__cs[i]);}__inline void __begin_critical_region(int region){	MPEnterCriticalRegion(__cs[region], 0x7FFFFFFF);	}__inline void __end_critical_region(int region){	MPExitCriticalRegion(__cs[region]);}#ifdef __cplusplus               /*hh 971206  expanded _extern macro*/	}#endif/*  Change Record *	16-Oct-95 JFH  First code release. * hh 990804 Filled out for #if _MWMT * hh 990831 Added undefs for __init_critical_regions, __kill_critical_regions */