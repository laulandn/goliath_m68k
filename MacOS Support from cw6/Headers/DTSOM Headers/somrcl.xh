/* * This file was generated by the SOM Compiler. * FileName: somrcl.xh. * Generated using: *     SOM Precompiler somipc: 2.18 *     SOM Emitter emitxh.dll: 2.33 *//* *  *  	Copyright:	© 1995 by Apple Computer, Inc. *  				All rights reserved. *  */#ifndef SOM_SOMRegisteredClassList_xh#define SOM_SOMRegisteredClassList_xhclass SOMRegisteredClassList;#define SOMRegisteredClassList_MajorVersion 70#define SOMRegisteredClassList_MinorVersion 1/* C++ SOM defs */#include <somcls.xh>#include <somcm.xh>/* C++ parent defs */#ifndef SOM_SOMObject_xh#include <somobj.xh>#endif#ifndef SOMRegisteredClassList_API#define SOMRegisteredClassList_API/* * -- The Class API *//* * Start of user-defined types: */class SOMClass;class SOMObject;/* * End of user-defined types. */#ifdef OLDIBMSOMAPISUPPORT#define SOMRegisteredClassListCClassData SOMRegisteredClassListClassData#define SOMRegisteredClassListNewClass(major,minor) somNewVersionedClassReference(SOMRegisteredClassList,major,minor)#endif/* define xxxMetaClass macro to facilitate (cls ## MetaClass) */#define SOMRegisteredClassListMetaClass SOMClass#if PRAGMA_ALIGN_SUPPORTED#  pragma options align=power#endif/* The API to the SOMRegisteredClassList class object, and the methods it introduces. */SOMEXTERN struct SOMRegisteredClassListClassDataStructure {#ifdef OLDIBMSOMAPISUPPORT	SOMClass			*classObject;	/* always zero, use somNewClassReference instead */#else	long zero;#endif	somStaticClassInfo *sci;	somDToken		instanceDataToken;	long reserved [3];	somMToken somNewIndexedClassReference;	somMToken somNumRegisteredClasses;} SOMDLINK SOMRegisteredClassListClassData;#if PRAGMA_ALIGN_SUPPORTED#  pragma options align=reset#endif#if !defined(SOMRegisteredClassList_Class_Source) && !defined(SOM_Module_somrcl_Source)#if PRAGMA_IMPORT_SUPPORTED#pragma import list SOMRegisteredClassListClassData#endif#endif/* * -- Typedefs and inline method declarations for left path inherited methods * -- are omitted because this compilation had -museinheritedmethods in effect *//* * -- Typedefs for SOMRegisteredClassList Method Procedures */SOMEXTERN {typedef SOMClass*   (* SOMLINK somTD_SOMRegisteredClassList_somNewIndexedClassReference)(SOMRegisteredClassList *somSelf, Environment *ev,		long index);typedef long   (* SOMLINK somTD_SOMRegisteredClassList_somNumRegisteredClasses)(SOMRegisteredClassList *somSelf, Environment *ev);}#endif /* SOMRegisteredClassList_API *//* * -- This emitter treats Method Tokens as Thunks by default. * -- Use the sc modifier "nothunks" to change this default */#undef somresolve_#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))/* * -- The C++ Wrapper Class for SOMRegisteredClassList */class SOMRegisteredClassList : public SOMObject{public:// SOMRegisteredClassList::new registers use of the class object, and then uses somNew// to allocate memory and load the object method table pointer. void *operator new(size_t size){    SOM_IgnoreWarning(size);    // Allocate memory using the default allocator for SOMRegisteredClassList, and    // clear mem & set method table pointer, call basic initialization    return (void*) somNewObject(SOMRegisteredClassList);}// SOMRegisteredClassList::delete uses the default deallocator for the object's class.void operator delete(void * obj){    if (obj) {        SOM_Resolve(obj,SOMObject,somFree)           ( (SOMObject*) obj );    }}/* method: somNewIndexedClassReference */SOMClass*   somNewIndexedClassReference(Environment *ev,		long index){   return SOM_ResolveD(this,SOMRegisteredClassList,SOMRegisteredClassList,somNewIndexedClassReference)	(this,ev,index);}/* method: somNumRegisteredClasses */long   somNumRegisteredClasses(Environment *ev){   return SOM_ResolveD(this,SOMRegisteredClassList,SOMRegisteredClassList,somNumRegisteredClasses)	(this,ev);}};   /* SOMRegisteredClassList */#endif       /* SOM_SOMRegisteredClassList_xh */