/*  Metrowerks Standard Library  *//*  $Date: 2000/08/19 19:49:02 $  *  $Revision: 1.4.12.3.2.1 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. *//* *		ThreadLocalData.h */#ifndef __THREADLOCALDATA_H__#define __THREADLOCALDATA_H__#include <ansi_parms.h>          /* hh 971206 */#include <cstdio>	/* For L_tmpnam declaration */#include <ctime>#pragma options align=native#ifdef __cplusplus          /* hh 971206 */	extern "C" {#endiftypedef struct _ThreadLocalData {	struct _ThreadLocalData *next;	int errno;	unsigned long int random_next;	unsigned char *	strtok_n;	unsigned char *	strtok_s;	/* really HANDLE */ void * thread_handle;	struct __std(tm) gmtime_tm; /* hh 990124 fixed __std */	char asctime_result[26];	char tmpnam_temp_name[L_tmpnam];} _ThreadLocalData;_MSL_IMP_EXP_C int _InitializeThreadDataIndex(void);_MSL_IMP_EXP_C int _InitializeThreadData(void *threadHandle); /* really HANDLE */_MSL_IMP_EXP_C void _DisposeThreadData(void);_MSL_IMP_EXP_C void _DisposeAllThreadData(void);_MSL_IMP_EXP_C int _InitializeMainThreadData(void);_MSL_IMP_EXP_C _ThreadLocalData * _GetThreadLocalData(void);_MSL_IMP_EXP_C void _DisposeThreadDataIndex(void);#ifdef __cplusplus          /* hh 971206 */	}#endif#pragma options align=reset#endif/*	Change Record * hh 971206  Added namespace support * hh 990124 fixed __std * blc 990317 Added thread_handle to allow for beginthread/endthread support * blc 000308 Fixed prototypes to have function arguments *  cc 000316 added _MSL_IMP_EXP_C  */