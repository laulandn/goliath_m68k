/* =========================================================================== *	DAVTypes.cpp	    * *  This file is part of the DAVLib package *  Copyright (C) 1999-2000  Thomas Bednarzär * *    This program is free software; you can redistribute it and/or modify *    it under the terms of the GNU General Public License as published by *    the Free Software Foundation; either version 2 of the License, or *    (at your option) any later version. * *    This program is distributed in the hope that it will be useful, *    but WITHOUT ANY WARRANTY; without even the implied warranty of *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *    GNU General Public License for more details. * *    You should have received a copy of the GNU General Public License *    along with this program; if not, write to the Free Software Foundation, *    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * *  For questions, suggestions, bug-reports, enhancement-requests etc. *  I may be contacted at: * *  tombednarz@hotmail.com */#include "DAVTypes.h"const char* DAVTypes::XML_PI		= "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n";const char* DAVTypes::NS_DAV		= "DAV:";const char* DAVTypes::STATUS		= "status";	  const char* DAVTypes::MULTISTATUS	= "multistatus";   const char* DAVTypes::RESPONSE		= "response";	const char* DAVTypes::ACTIVELOCK	= "activelock";	  const char* DAVTypes::PROPSTAT		= "propstat";	const char* DAVTypes::PROPFIND		= "propfind";	const char* DAVTypes::PROPNAME		= "propname";const char* DAVTypes::PROP			= "prop";	const char* DAVTypes::RESOURCETYPE	= "resourcetype";	const char* DAVTypes::LOCKINFO		= "lockinfo";const char* DAVTypes::LOCKTYPE		= "locktype";const char* DAVTypes::LOCKSCOPE		= "lockscope";const char* DAVTypes::DEPTH			= "depth";const char* DAVTypes::TIMEOUT		= "timeout";const char* DAVTypes::LOCKTOKEN		= "locktoken";const char* DAVTypes::OWNER			= "owner";const char* DAVTypes::SHARED		= "shared";const char* DAVTypes::EXCLUSIVE		= "exclusive";const char* DAVTypes::WRITE			= "write";const char* DAVTypes::HREF			= "href";const char* DAVTypes::PROPERTYUPDATE = "propertyupdate";const char* DAVTypes::SET           = "set";const char* DAVTypes::REMOVE        = "remove";const char* DAVTypes::GETLASTMODIFIED	  = "getlastmodified";const char* DAVTypes::GETCONTENTLENGTH	  = "getcontentlength";const char* DAVTypes::GETCONTENTTYPE	  = "getcontenttype";const char* DAVTypes::CREATIONDATE		  = "creationdate";const char* DAVTypes::DISPLAYNAME		  = "displayname";const char* DAVTypes::GETETAG			  = "getetag";const char* DAVTypes::LOCKDISCOVERY		  = "lockdiscovery";const char* DAVTypes::SUPPORTEDLOCK		  = "supportedlock";   const char* DAVTypes::GETCONTENTLANGUAGE  = "getcontentlanguage";const char* DAVTypes::SOURCE			  = "source";const char* DAVTypes::COLLECTION		  = "collection";// Microsoft extensions// (www.ics.uci.edu/~ejw/authoring/props/draft-hopmann-collection-props-00.txt)const char* DAVTypes::CHILDCOUNT	  		= "childcount";const char* DAVTypes::DEFAULTDOCUMENT		= "defaultdocument";const char* DAVTypes::GETID	  				= "id";const char* DAVTypes::ISCOLLECTION			= "iscollection";const char* DAVTypes::ISHIDDEN	 			= "ishidden";const char* DAVTypes::ISSTRUCTUREDDOCUMENT	= "isstructureddocument";const char* DAVTypes::HASSUBS				= "hassubs";const char* DAVTypes::NOSUBS				= "nosubs";const char* DAVTypes::OBJECTCOUNT			= "objectcount";const char* DAVTypes::RESERVED				= "reserved";const char* DAVTypes::VISIBLECOUNT			= "visiblecount";const char* DAVTypes::mPropertyStrings[] = {	DAVTypes::CREATIONDATE,		DAVTypes::DISPLAYNAME,		DAVTypes::GETCONTENTLANGUAGE,	DAVTypes::GETCONTENTLENGTH,	DAVTypes::GETCONTENTTYPE,	DAVTypes::GETETAG,	DAVTypes::GETLASTMODIFIED,	DAVTypes::LOCKDISCOVERY,	DAVTypes::RESOURCETYPE,	DAVTypes::SOURCE,			DAVTypes::SUPPORTEDLOCK};const int DAVTypes::mPropertyStringsCount = 11;	// !!! UPDATE WHENEVER mPropertyStrings IS CHANGED !const char* DAVTypes::mExtPropertyStrings[] = {	DAVTypes::CHILDCOUNT,	DAVTypes::DEFAULTDOCUMENT,	DAVTypes::GETID,	DAVTypes::ISCOLLECTION,	DAVTypes::ISHIDDEN,			DAVTypes::ISSTRUCTUREDDOCUMENT,	DAVTypes::HASSUBS,		DAVTypes::NOSUBS,			DAVTypes::OBJECTCOUNT,	DAVTypes::RESERVED,		DAVTypes::VISIBLECOUNT};const int DAVTypes::mPropertyStringsExtCount = 11; // !!! UPDATE WHENEVER mExtPropertyStrings IS CHANGED !