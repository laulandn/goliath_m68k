/* *	WASTE Demo Project: *	Measure conversions * *	Copyright © 1993-2000 Marco Piovanelli *	All Rights Reserved * *	C port by John C. Daub * *	<mailto:waste@merzwaren.com> *	<http://www.merzwaren.com/waste/> */#ifndef __MEASURES__#define __MEASURES__#ifndef __MACTYPES__#include <MacTypes.h>#endif//	error codesenum{	errMeasuresTokenizationFailed		=	-9340,	//	could not tokenize the input string	errMeasuresSyntaxError				=	-9341,	//	generic syntax error	errMeasuresBadFormatSpec			=	-9342,	//	invalid format spec in unit descriptor	errMeasuresBadValue					=	-9343	//	specified value cannot be represented} ;//	public constants and data typesenum{	kUnitPoint							=	0,			//	PostScript point = 1/72 inch -- this is the canonical unit for all internal calculations	kUnitCentimeter						=	1,			//	centimeter, this is the default unit for the metric world	kUnitMillimeter						=	2,			//	millimeter	kUnitInch							=	3			//	inch, this is the default unit for the US} ;enum{	kMaxUnitSymbolLength				=	8			//	maximum length of unit symbol strings} ;typedef UInt16			UnitCode ;typedef unsigned char	UnitString [ kMaxUnitSymbolLength ] ;//	public interfacepascal OSStatus MeasureToString (			Fixed				inCanonicalValue,											UnitCode			inUnit,											Str255				outRepresentation ) ;pascal OSStatus StringToMeasure (			ConstStr255Param	inRepresentation,											UnitCode			inDefaultUnit,											Fixed *				outCanonicalValue ) ;pascal OSStatus NewUnit (					UnitCode			inUnit,											Fixed				inConversionFactor,											ConstStr255Param	inFormatString,											Handle *			outDescriptor ) ;pascal OSStatus NewUnitResource (			UnitCode			inUnit,											Fixed				inConversionFactor,											ConstStr255Param	inFormatString,											ConstStr255Param	inUnitSymbol ) ;#endif /*__MEASURES__*/