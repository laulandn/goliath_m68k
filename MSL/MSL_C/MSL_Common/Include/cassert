/*  Metrowerks Standard Library  *//*  $Date: 2000/04/13 19:10:54 $  *  $Revision: 1.8.12.3 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. *//* *	cassert        hh  971206 filename used to be assert.h */#include <ansi_parms.h>#ifndef RC_INVOKED#	pragma options align=native#	if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)#		pragma import on#	endif#	ifdef assert		/* hh  980901 */#		undef assert#	endif#	ifdef NDEBUG#		define assert(condition) ((void) 0)#	else#		ifndef __cassert__#			define	__cassert__#			ifdef __cplusplus       /* hh  971206 */				extern "C" {#			endif#			ifdef UNICODE      /* defines of assert(condition) moved outside #ifndef __cassert__ mm980724 */  				_MSL_IMP_EXP_C void  __wchar_assertion_failed(wchar_t const *, char const *, int); /* mm 990415 */#			else  				_MSL_IMP_EXP_C void  __assertion_failed(char const *, char const *, int);			/* mm 990415 */#			endif#			ifdef __cplusplus       /* hh  971206 */				}#			endif#		endif /* __cassert__ */#		ifdef UNICODE	  /* moved here from inside #ifndef __cassert__ mm980724 */#			define assert(condition) ((condition) ? ((void) 0) : __wchar_assertion_failed( L#condition, __FILE__, __LINE__))#		else#			define assert(condition) ((condition) ? ((void) 0) : __assertion_failed(#condition,__FILE__, __LINE__))#		endif#	endif /* def NDEBUG */#	if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)#		pragma import reset#	endif#	pragma options align=reset#endif /* RC_INVOKED *//*     Change record * hh  971206 Changed filename from assert.h to cassert and added namespace support * hh 971230 added RC_INVOKED wrapper * mm 980724  Moved defines of assert(condition) outside __cassert__ wrappers MW08171 * hh 980901  Indented, and added assert existence test before undef'ing * mm 990415  Inserted const into prototype definitions to avoid warnings when #pragma const_strings on in force IL9903-1579	 * hh 991112  Removed namespace support */