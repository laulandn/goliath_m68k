/*  Metrowerks Standard Library  *//*  $Date: 2000/05/30 20:01:25 $  *  $Revision: 1.7.18.10 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. */#ifndef	_STAT#define	_STAT#include <ansi_parms.h>  /* m.f. 042898 */#if !defined(__dest_os)                 #error __dest_os undefined #endif                                             /*MW-mm 960927a*/#define S_IFMT         0xF000         /* file type mask */#define S_IFDIR        0x4000         /* directory */#define S_IFIFO        0x1000         /* pipe */#define S_IFCHR        0x2000         /* character special */#define S_IFBLK		   0x6000		  /* blocking stream   */#define S_IFREG        0x8000         /* regular *//* *	File type macros */ #define S_ISFIFO(m)	(((m)&(S_IFMT)) == (S_IFIFO))#define S_ISDIR(m)	(((m)&(S_IFMT)) == (S_IFDIR))#define S_ISCHR(m)	(((m)&(S_IFMT)) == (S_IFCHR))#define S_ISREG(m)	(((m)&(S_IFMT)) == (S_IFREG))/* * The following file mode macros are defined to allow compilation of programs that * reference them; however, they are not relevant for Windows */#define	S_IRWXU	0x0E00		/* Permissions for file owner class */	/* mm 990107 */#define 	S_IRUSR 0x0800	/* Read permission file owner class */	/* mm 990107 */#define 	S_IWUSR 0x0400	/* writ permission file owner class */	/* mm 990107 */#define 	S_IXUSR 0x0200	/* exec permission file owner class */	/* mm 990107 */#define S_IRWXG 0x01C0		/* permissions for file group class */	/* mm 990107 */#define 	S_IRGRP 0x0100	/* Read permission file group class  */	/* mm 990107 */#define 	S_IWGRP 0x0800	/* writ permission file group class  */	/* mm 990107 */#define 	S_IXGRP 0x0400	/* exec permission file group class  */	/* mm 990107 */#define S_IRWXO 0x0038		/* permissions for file other class */	/* mm 990107 */#define 	S_IROTH 0x0200	/* Read permission file other class */	/* mm 990107 */#define 	S_IWOTH 0x0100	/* writ permission file other class */	/* mm 990107 */#define 	S_IXOTH 0x0800	/* exec permission file other class */	/* mm 990107 */#define S_ISUID 0x0004		/* set user ID on execution         */	/* mm 990107 */#define S_ISGID 0x0002		/* set group ID on execution        */	/* mm 990107 */#if __dest_os == __mac_os	#include <stat.mac.h>#elif (__dest_os == __win32_os || __dest_os == __wince_os)	#include <stat.win32.h>#elif __dest_os == __powertv_os	#include <stat.powertv.h>#endif#ifdef __cplusplusextern "C" {#endif/* *	Get state information on a file. */_MSL_IMP_EXP_C int _stat(const char *, struct _stat *);/* *	Get state information on an open file. */_MSL_IMP_EXP_C int _fstat(int , struct _stat *);_MSL_IMP_EXP_C int _mkdir(const char *);#ifdef _POSIX__inline  int  	stat(const char *_a, struct stat *_b)     {return  _stat(_a, (struct _stat*)_b);} __inline  int  	fstat(int _a, struct stat *_b)     {return  _fstat(_a,(struct _stat*)_b);} __inline  int  	mkdir(const char *_a, int _b) { 					  #pragma unused(_b) 					  return  _mkdir(_a);		         } 		         #endif  /* POSIX */#ifdef __cplusplus}#endif#pragma options align=reset#endif/*     Change record//MW-mm 960927a Inserted setting of __dest_os to __mac_os when not otherwise set.//   cc 000530  removed dest os of mkdir and made one common prototype  */