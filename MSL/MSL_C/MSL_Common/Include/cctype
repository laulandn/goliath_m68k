/*  Metrowerks Standard Library  *//*  $Date: 2000/04/13 19:10:56 $  *  $Revision: 1.7.16.8 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. */ /* *	cctype             hh  971206 filename used to be ctype.h */ #ifndef __cctype__#define __cctype__#include <ansi_parms.h>     /* hh  971206 this header comes first*/#include <eof.h>		/* blc 990825 */#ifndef RC_INVOKED   		/* hh 971230 */#pragma options align=native#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import on#endif#ifdef __cplusplus       /* hh  971206 */	extern "C" {#endif/* rjk 980313 add the _MSL_IMP_EXP_C */extern _MSL_IMP_EXP_C unsigned char	__ctype_map[];extern _MSL_IMP_EXP_C unsigned char	__lower_map[];extern _MSL_IMP_EXP_C unsigned char	__upper_map[];#ifdef __cplusplus       /* hh  971206 */	}#endif#define __control_char		0x01#define __motion_char		0x02#define __space_char		0x04#define __punctuation		0x08#define __digit				0x10#define __hex_digit			0x20#define __lower_case		0x40#define __upper_case		0x80#define __letter			(__lower_case   | __upper_case  )#define __alphanumeric		(__letter       | __digit       )#define __graphic			(__alphanumeric | __punctuation )#define __printable			(__graphic      | __space_char  )#define __whitespace		(__motion_char  | __space_char  )#define __control           (__motion_char  | __control_char)#define __zero_fill(c)		((int) (unsigned char) (c))#ifdef __cplusplus       /* hh  971206 */	//extern "C" {	#ifdef _MSL_USING_NAMESPACE		namespace std {	#endif#endif/*_MSL_IMP_EXP_C int isalnum (int);_MSL_IMP_EXP_C int isalpha (int);_MSL_IMP_EXP_C int iscntrl (int);_MSL_IMP_EXP_C int isdigit (int);_MSL_IMP_EXP_C int isgraph (int);_MSL_IMP_EXP_C int islower (int);_MSL_IMP_EXP_C int isprint (int);_MSL_IMP_EXP_C int ispunct (int);_MSL_IMP_EXP_C int isspace (int);_MSL_IMP_EXP_C int isupper (int);_MSL_IMP_EXP_C int isxdigit(int);_MSL_IMP_EXP_C int tolower (int);_MSL_IMP_EXP_C int toupper (int);_MSL_IMP_EXP_C int iswblank(int);   */__inline int isalnum(int c)		{ return __ctype_map[__zero_fill(c)] & __alphanumeric; }__inline int isalpha(int c)		{ return __ctype_map[__zero_fill(c)] & __letter      ; }__inline int iscntrl(int c)		{ return __ctype_map[__zero_fill(c)] & __control     ; }__inline int isdigit(int c)		{ return __ctype_map[__zero_fill(c)] & __digit       ; }__inline int isgraph(int c)		{ return __ctype_map[__zero_fill(c)] & __graphic     ; }__inline int islower(int c)		{ return __ctype_map[__zero_fill(c)] & __lower_case  ; }__inline int isprint(int c)		{ return __ctype_map[__zero_fill(c)] & __printable   ; }__inline int ispunct(int c)		{ return __ctype_map[__zero_fill(c)] & __punctuation ; }__inline int isspace(int c)		{ return __ctype_map[__zero_fill(c)] & __whitespace  ; }__inline int isupper(int c)		{ return __ctype_map[__zero_fill(c)] & __upper_case  ; }__inline int isxdigit(int c)	    { return __ctype_map[__zero_fill(c)] & __hex_digit   ; }/* begin mm 970918 */__inline int tolower(int c)		{ return ((c == EOF) ? EOF:((int)  __lower_map[__zero_fill(c)])); }__inline int toupper(int c)		{ return ((c == EOF) ? EOF:((int)  __upper_map[__zero_fill(c)])); }/* end mm 970918 */__inline int iswblank(int c)      { return ((c == (int)L' ') || (c == (int)L'\t')); } /* mm 980626 */#ifdef __cplusplus	#ifdef _MSL_USING_NAMESPACE       }	#endif#endif#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import reset#endif#pragma options align=reset#endif /* RC_INVOKED */#endif /* __cctype__ *//*     Change record * 961221 bkoz line 21-23 added extern keyword (mmoss) * mm 970918  Change to ensure that toupper(EOF) and tolower(EOF) == EOF * mm 970925  Deleted defines for toupper and tolower and inserted them into ctype.c  * hh  971206 Changed filename from ctype.h to cctype and added namespace support * hh 971230 added RC_INVOKED wrapper * rjk 980313 added _MSL_IMP_EXP_C * mm 980626  added iswblank---see C9x 7.18.2.1.3 *  mm 990730	Removed include of cstdio. * blc 990825 added include of eof.h needed when included from C++ files *  cc 000320 added _MSL_IMP_EXP_C  *  cc 020320 removed macros and changed inline to extern __inline  */