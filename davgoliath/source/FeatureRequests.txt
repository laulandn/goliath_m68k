Drag and drop between Goliath windows would be very nifty, although you will  need to think through the locking scenarios.  Basically, for every move/copy  combination, you have the possibility of the source or destination (or both)  being locked, 4 possible combinations. ( Jim Whitehead <ejw@ics.uci.edu>)You'll also start getting into lock token management issues soon.  For  example, what happens if a user takes out a lock with Goliath, then shuts  down the application?  It would be nice if Goliath persistently stored the  lock token so that when the user started up Goliath again, the token was  still there.  Then there is the separate issue of, what happens if the user  has taken out the lock using a different application (say, using WebDAV  Explorer).  It would be nice if, upon receiving a locked response, Goliath  did lock discovery, grabbed the lock token, and then re-tried the operation  using the discovered token (along with the user's authentication  credentials). ( Jim Whitehead <ejw@ics.uci.edu>)  Of course, I'd expect to see a menu option for taking out a lock, and  another for examining the lock's metadata (who owns it, its type, its  duration, etc.) ( Jim Whitehead <ejw@ics.uci.edu>)doubleclicking to open file directly into an application.... i.e. if I  double-click a .doc, it opens the .doc into word [via the Mac's "normal"  extension translation mechanism] (Bill Bumgarner <bbum@codefab.com>)one of the first obvious additions to the namespace stuff would be to assign  a creator/type as a property (Bill Bumgarner <bbum@codefab.com>)provide for synchronizing a local and remote directory or file.   This could  be extended such that if you download a document and open it in, say, word,...  Goliath could periodically check to see ifthe local copy has changed and  potentially automatically push the changes back to the server.better progress reporting (Bill Bumgarner <bbum@codefab.com> and Cameron Perry <cnperry@ucsd.edu>)port to 7.5/7.6 (Walter Ian Kaye <boo@best.com>)Done----- cmd-delete to delete selected files [like finder] (Bill Bumgarner <bbum@codefab.com>)- URL Parameters on download (Jim Harrison <jhrsn@pop.pitt.edu>)- better handling of resource forks and applications (matt harrington - <matt@ucsd.edu>)