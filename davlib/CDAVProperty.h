/* =========================================================================== *	CDAVProperty.h		    * *  This file is part of the DAVLib package *  Copyright (C) 1999-2000  Thomas Bednarzär * *    This program is free software; you can redistribute it and/or modify *    it under the terms of the GNU General Public License as published by *    the Free Software Foundation; either version 2 of the License, or *    (at your option) any later version. * *    This program is distributed in the hope that it will be useful, *    but WITHOUT ANY WARRANTY; without even the implied warranty of *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *    GNU General Public License for more details. * *    You should have received a copy of the GNU General Public License *    along with this program; if not, write to the Free Software Foundation, *    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * *  For questions, suggestions, bug-reports, enhancement-requests etc. *  I may be contacted at: * *  tombednarz@hotmail.com * =========================================================================== *//*!   @header DAVLib	This library implements HTTP 1.1 and the WebDAV (RFC 2518) extensions to HTTP.   This program is free software; you can redistribute it and/or modify   it under the terms of the GNU General Public License as published by   the Free Software Foundation; either version 2 of the License, or   (at your option) any later version.    This program is distributed in the hope that it will be useful,   but WITHOUT ANY WARRANTY; without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License for more details.*/#pragma once#ifndef __CDAVPROPERTY_H__#define __CDAVPROPERTY_H__#include <string>#include <vector>#include <MacTypes.h>#define DAV_NAMESPACE "DAV:"#define MODDAV_NAMESPACE "http://apache.org/dav/props/"#define DAVLIB_NAMESPACE "http://www.webdav.org/MacDAVLib/"/*!   @class CDAVProperty   @discussion an abstraction of a WebDAV property; a name/value pair*/class CDAVProperty {   public:     /*!         @function CDAVProperty		   @discussion object constructor	   */      CDAVProperty();     /*!         @function CDAVProperty		   @discussion object constructor			@param name the property's name			@param space the XML namespace.  If NULL, assumed to be in the DAV: namespace.  			Default value is NULL.     	*/      CDAVProperty(const char* name, const char* space=NULL);      /*!         @function ~CDAVProperty		   @discussion object destructor	    */      virtual ~CDAVProperty();     /*!         @function GetPropertyName		   @discussion access the name of this property				   */      std::string &GetPropertyName();     /*!         @function GetNamespace		   @discussion access the XML namespace of this property	   */      std::string &GetNamespace();      /*!         @function getIsInDAVNamespace	   	@discussion returns true if this propery object refers to a property specfied			 in the WebDAV spec	   */      Boolean getIsInDAVNamespace();           /*!         @function == 		   @discussion equality operator			@param rhs the object comapred to	   */      bool operator == (CDAVProperty &rhs) const;     /*!         @function <		   @discussion less-than operator			@param rhs the object comapred to	   */      bool operator < (const CDAVProperty &rhs) const;   protected:      std::string mNamespace;      std::string mPropertyName;      Boolean mInDavSpace;};extern CDAVProperty LastModified, ContentLength, ResourceType, ContentType,                    CreationDate, DisplayName, ETag, LockDiscovery, SupportedLock,                    ContentLanguage, Source, mod_davExecutable;// Microsoft extensionsextern CDAVProperty ChildCount, DefaultDocument, Id, IsCollection, IsHidden,					IsStructuredDocument, HasSubs, NoSubs, ObjectCount, Reserved,					VisibleCount;  /*!      @typedef CDAVPropertyVector	  @discussion a convienience; a std::vector of CDAVProperty objectd   */typedef std::vector<CDAVProperty> CDAVPropertyVector;#endif