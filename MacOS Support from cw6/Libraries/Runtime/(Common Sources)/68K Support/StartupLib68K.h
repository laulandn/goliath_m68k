/****************************************************************************//*	Project...:	Compiler Environment										*//*	Name......:	StartupLib.h												*//*	Purpose...:	Startup libary definitions									*//*  Copyright.: Copyright © 1994-1997 Metrowerks, Inc. All rights reserved. *//****************************************************************************/struct SegmentHeader {					//	the structure of a segment header	short	jtsoffset;					// A5 relative offset of this segments jump table (short version)	short	jtentries;					// number of entries in this segments jump table	long	jtloffset;					// A5 relative offset of this segments jump table (long version)	long	xrefoffset;					// offset of xref data in this CODE resource	char	code[];						// the code};struct JumpTableEntry {					//	the structure of a jumptable entry	short			jumpinstruction;	//	instruction: jmp routine or _LoadSeg	long			jumpaddress;		//	absolute or relative address of rountine	short			segment;			//	routines segment number};struct SegmentLoadCallbacks {					//	segment loader callback functions	void	(*PreLoadSeg)(short segment);		//	called before loading a new segment	void	(*PostLoadSeg)(short segment);		//	called after loading a new segment	void	(*PostUnloadSeg)(short segment);	//	called after unloading an old segment	void	(*LoadSegErr)(short segment);		//	called before loading a new segment};extern struct SegmentLoadCallbacks	__segcallbacks;//	the segment loader will call any of the functions in this struct that are != NULL //	the segment loader will retry to load the segment after returning from LoadSegErr()extern void		__TrapUnpatch__(void);//	extern void	(*__exit_proc__)(void);	//	pointer to function called on exit//	__exit_proc__ is no longer used: overload exit() instead