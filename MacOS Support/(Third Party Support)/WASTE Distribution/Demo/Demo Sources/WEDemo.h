/* *	WASTE Demo Project: *	WASTE Demo Header * *	Copyright © 1993-2002 Marco Piovanelli *	All Rights Reserved * *	Original C Port by John C. Daub * *	<mailto:waste@merzwaren.com> *	<http://www.merzwaren.com/waste/> */#pragma once#ifndef __WEDEMO__#define __WEDEMO__#ifdef __MACH__/* FRAMEWORK-STYLE INCLUDES */#ifdef __MWERKS__#ifndef __CF_USE_FRAMEWORK_INCLUDES__#define __CF_USE_FRAMEWORK_INCLUDES__#endif/* CarbonCore */#ifndef __CONDITIONALMACROS__#include <CarbonCore/ConditionalMacros.h>#endif#ifndef __MACTYPES__#include <CarbonCore/MacTypes.h>#endif#ifndef __MACERRORS__#include <CarbonCore/MacErrors.h>#endif#ifndef __FIXMATH__#include <CarbonCore/FixMath.h>#endif#ifndef __TEXTUTILS__#include <CarbonCore/TextUtils.h>#endif#ifndef __FILES__#include <CarbonCore/Files.h>#endif#ifndef __FOLDERS__#include <CarbonCore/Folders.h>#endif#ifndef __ALIASES__#include <CarbonCore/Aliases.h>#endif#ifndef __RESOURCES__#include <CarbonCore/Resources.h>#endif#ifndef __GESTALT__#include <CarbonCore/Gestalt.h>#endif/* Apple Events */#ifndef __AEDATAMODEL__#include <AE/AEDataModel.h>#endif#ifndef __AEREGISTRY__#include <AE/AERegistry.h>#endif/* Open Scripting */#ifndef __FINDERREGISTRY__#include <OpenScripting/FinderRegistry.h>#endif/* HI Toolbox */#ifndef __AEINTERACTION__#include <HIToolbox/AEInteraction.h>#endif#ifndef __CONTROLS__#include <HIToolbox/Controls.h>#endif#ifndef __CONTROLDEFINITIONS__#include <HIToolbox/ControlDefinitions.h>#endif#ifndef __MENUS__#include <HIToolbox/Menus.h>#endif#ifndef __MACWINDOWS__#include <HIToolbox/MacWindows.h>#endif#ifndef __DIALOGS__#include <HIToolbox/Dialogs.h>#endif#ifndef __CARBONEVENTS__#include <HIToolbox/CarbonEvents.h>#endif#ifndef __APPEARANCE__#include <HIToolbox/Appearance.h>#endif#ifndef __SCRAP__#include <HIToolbox/Scrap.h>#endif/* Navigation Services */#ifndef __NAVIGATION__#include <NavigationServices/Navigation.h>#endif/* Launch Services */#ifndef __LAUNCHSERVICES__#include <LaunchServices/LaunchServices.h>#endif/* Print */#ifndef __PMAPPLICATION__#include <Print/PMApplication.h>#endif#else#ifndef __CARBON__#include <Carbon/Carbon.h>#endif#endif#else/* FLAT INCLUDES *//* #include the Mother Of All Includes */#ifndef __CONDITIONALMACROS__#include <ConditionalMacros.h>#endif/* check the version number of the Universal Interfaces we're using */#if ((!defined(UNIVERSAL_INTERFACES_VERSION))||(UNIVERSAL_INTERFACES_VERSION<0x341))#error "You need Universal Headers version 3.4.1 or newer to compile the WASTE Demo"#endif/* #include other essential Mac OS headers */#ifndef __AEDATAMODEL__#include <AEDataModel.h>#endif#ifndef __AEINTERACTION__#include <AEInteraction.h>#endif#ifndef __AEREGISTRY__#include <AERegistry.h>#endif#ifndef __ALIASES__#include <Aliases.h>#endif#ifndef __APPLEEVENTS__#include <AppleEvents.h>#endif#ifndef __CARBONEVENTS__#include <CarbonEvents.h>#endif#ifndef __CONTROLS__#include <Controls.h>#endif#ifndef __CONTROLDEFINITIONS__#include <ControlDefinitions.h>#endif#ifndef __DIALOGS__#include <Dialogs.h>#endif#ifndef __DRAG__#include <Drag.h>#endif#ifndef __FILES__#include <Files.h>#endif#ifndef __FINDERREGISTRY__#include <FinderRegistry.h>#endif#ifndef __FIXMATH__#include <FixMath.h>#endif#ifndef __FOLDERS__#include <Folders.h>#endif#ifndef __GESTALT__#include <Gestalt.h>#endif#ifndef __MACERRORS__#include <MacErrors.h>#endif#ifndef __MACTYPES__#include <MacTypes.h>#endif#ifndef __MACWINDOWS__#include <MacWindows.h>#endif#ifndef __MENUS__#include <Menus.h>#endif#ifndef __NAVIGATION__#include <Navigation.h>#endif#ifndef __PMAPPLICATION__#include <PMApplication.h>#endif#ifndef __RESOURCES__#include <Resources.h>#endif#ifndef __SCRAP__#include <Scrap.h>#endif#ifndef __LAUNCHSERVICES__#include <LaunchServices.h>#endif#endif /*defined(__MACH__)*//* #include ANSI C headers */#include <stdlib.h>/* #include other headers */#ifndef __WASTE__#include "WASTE.h"#endif#if (UNIVERSAL_INTERFACES_VERSION <= 0x340)/* HI command IDs */enum{	/* the following commands were not defined in UH prior to 3.4.1 */	kHICommandNew					=		FOUR_CHAR_CODE ( 'new ' ),	kHICommandOpen					=		FOUR_CHAR_CODE ( 'open' ),	kHICommandClose					=		FOUR_CHAR_CODE ( 'clos' ),	kHICommandSave					=		FOUR_CHAR_CODE ( 'save' ),	kHICommandSaveAs				=		FOUR_CHAR_CODE ( 'svas' ),	kHICommandPageSetup				=		FOUR_CHAR_CODE ( 'page' ),	kHICommandPrint					=		FOUR_CHAR_CODE ( 'prnt' )} ;#endifenum{	/* WASTE Demo signature */	sigWASTE						=		FOUR_CHAR_CODE ( 'OEDE' ),	/* resource types, clipboard types, and file types */	kTypeDialogItemList				=		FOUR_CHAR_CODE ( 'DITL' ),	kTypePicture					=		FOUR_CHAR_CODE ( 'PICT' ),	kTypePageFormat					=		FOUR_CHAR_CODE ( 'WEpg' ),	kTypePageMargins				=		FOUR_CHAR_CODE ( 'MARG' ),	kTypeSound						=		FOUR_CHAR_CODE ( 'snd ' )} ;enum{	/* user tags used in association with WEGetUserInfo / WESetUserInfo */	kDocumentTag					=		FOUR_CHAR_CODE ( 'docu' ),		/* reference to owner document */	kPageFormatTag					=		kTypePageFormat,	kPageMarginsTag					=		kTypePageMargins} ;/* possible values for HandleOpenDocument refCon parameter */enum{	kDoOpen							=		0,	kDoPrint						=		1} ;/* other commonly used constants */enum{	kTextMargin							=	3,				/* indent of text rect from a window port rect */	kLeftClickMargin					=	10,				/* width of left margin area for single click selection of lines */	kScrollDelta						=	11,				/* pixels to scroll when the scroll bar arrow is clicked */	kStandardTranslucencyThreshold		=	0x7FFFFFFF,		/* infinity */	kMinMacOSClassicVersion				=	0x09108000,		/* Mac OS 9.1 */	kMinMacOSXVersion					=	0x10108000,		/* Mac OS X 10.1 */	kMinCarbonLibVersion				=	0x01508000,		/* CarbonLib 1.5 */	kMinWASTEVersion					=	0x02104008		/* WASTE 2.1a8 */} ;/* enumeration types used for closing a window and/or quitting the application */typedef enum{	savingYes,	savingNo,	savingAsk} SavingOption ;/* enumeration for orientation (vertical/horizontal) */typedef enum{	kVertical,	kHorizontal} Orientation ;/* Resource ID numbers *//* menu IDs */enum{	kMenuApple					= 1,	kMenuFile					= 2,	kMenuEdit					= 3,	kMenuFont					= 4,	kMenuSize					= 5,	kMenuStyle					= 6,	kMenuTextColor				= 7,	kMenuAlignment				= 8,	kMenuContextual				= 50,		/* first menu ID used for contextual menus */	kMenuFontFirstSubmenu		= 100		/* first font submenu ID in case we use a hierarchical Font menu */};/* dialog item list (DITL) resource IDs */enum{	kDITLSaveAsExtras			= 128		/* additional items for the Save As dialog */} ;/* string list resource IDs */enum{	kUndoStringsID				= 128,	kAlertStringsID				= 129} ;/* indices to strings in string list STR# 129 */enum{	kIndexMacOSTooOldSummary			=	1,	kIndexMacOSTooOldDescription		=	2,	kIndexMacOSXTooOldSummary			=	3,	kIndexMacOSXTooOldDescription		=	4,	kIndexCarbonLibTooOldSummary		=	5,	kIndexCarbonLibTooOldDescription	=	6,	kIndexWASTELibTooOldSummary			=	7,	kIndexWASTELibTooOldDescription		=	8,	kIndexGenericErrorSummary			=	9,	kIndexGenericErrorDescription		=	10} ;/* miscellaneous resource IDs */enum{	kMenuBarID					= 128,	kTemplateColorIconID		= 300} ;/* a PageMarginRec is a structure defining the margins to use *//* when printing a document page.  Margins are expressed in Fixed (16:16) points. */struct PageMarginRec{	Fixed				top ;	Fixed				bottom ;	Fixed				left ;	Fixed				right ;} ;typedef struct PageMarginRec PageMarginRec, *PageMarginRecPtr, **PageMarginRecHandle ;/* a Document is a structure associated with each window *//* a handle to this structure is kept in the window refCon */struct Document{	WindowRef					window ;					/* the window */	ControlRef					rootControl ;				/* its root control */	ControlRef					scrollBars [ 2 ] ;			/* its scroll bars */	WEReference 				text ;						/* its WASTE instance */	OSType						fileFormat ;				/* format of associated file ('TEXT', 'utxt' or 'RTF ') */	AliasHandle					fileAlias ;					/* alias to associated file */	UInt32						cleanModCount ;				/* WASTE modification count at the time the document was last saved */	PMPrintSession				printSession ;				/* current print session */	PMPageFormat				pageFormat ;				/* page format (only valid during printing operations) */	PMPrintSettings				printSettings ;				/* print settings (only valid during printing operations) */	EventHandlerUPP				windowEventHandler ;		/* UPP to handler for windows event */	EventHandlerRef				windowEventHandlerRef ;		/* EventHandlerRef to above */	EventHandlerUPP				menuEventHandler ;			/* UPP to handler for menu events */	EventHandlerRef				menuEventHandlerRef [ 5 ] ;	/* EventHandlerRef's to above */	EventHandlerUPP				windowCommandHandler ;		/* UPP to handler for HI commands targeted to windows */	EventHandlerRef				windowCommandHandlerRef ;	/* EventHandlerRef to above */	EventHandlerUPP				windowTextHandler ;			/* UPP to handler for keyboard events */	EventHandlerRef				windowTextHandlerRef ;		/* EventHandlerRef to above */	EventHandlerUPP				mouseWheelHandler ;			/* UPP to handler for mouse wheel events */	EventHandlerRef				mouseWheelHandlerRef ;		/* EventHandlerRef to above */	EventHandlerUPP				servicesHandler ;			/* UPP to handler for Mac OS X Services */	EventHandlerRef				servicesHandlerRef ;		/* EventHandlerRef to above */	WEScrollUPP					textScroller ;				/* UPP to WASTE scroll callback */	ControlActionUPP			barScroller ;				/* UPP to scrollbar action callback */	DragTrackingHandlerUPP		dragTracker ;				/* UPP to drag tracking handler */	DragReceiveHandlerUPP		dragReceiver ;				/* UPP to drag receive handler */} ;typedef struct Document Document ;/* FUNCTION PROTOTYPES *//* From WEDemoAbout.c */OSStatus		DoAboutBox ( void ) ;/* From WEDemoApplication.c */OSStatus		Initialize ( void ) ;OSStatus		InitializeMenus ( void ) ;OSStatus		InstallEventHandlers ( void ) ;OSStatus		GotRequiredParams ( const AppleEvent * inAE ) ;OSStatus		SaveDocument ( const FSRef * inFolderRef, CFStringRef inFileName, Boolean inReplacing, OSType inFileType, Boolean inStationery, Document * inDocument ) ;OSStatus		DoSave ( Document * inDocument, Boolean inCloseAfterSaving ) ;OSStatus		DoQuit ( SavingOption inSavingOption ) ;void			ReplaceParam ( Str255 ioTarget, ConstStr255Param inParam, UInt16 inIndex ) ;void			NumToVersionString ( UInt32 inVersion, Str15 outVersionString ) ;void			ErrorAlert ( OSStatus inErrorCode ) ;void			ForgetHandle ( Handle * ioHandle ) ;OSStatus		CloneHandle ( Handle inSrcHandle, Handle * outDstHandle ) ;OSStatus		CloneColorIcon ( CIconHandle inSrcIcon, CIconHandle * outDstIcon ) ;/* From WEDemoFiles.c */OSStatus		WriteFile ( const FSRef * inFolderRef, CFStringRef inFileName, Boolean inReplacing, OSType inFileType, WEReference inText, FSRef * outFileRef ) ;OSStatus		FSGetObjectNameAsCFString ( const FSRef * inObjectRef, CFStringRef * outCFString ) ;OSStatus		FSGetObjectFinderInfo ( const FSRef * inObjectRef, FileInfo * outFinderInfo ) ;OSStatus		FSGetObjectLock ( const FSRef * inObjectRef, Boolean * outLock ) ;OSStatus		FSGetObjectVolume ( const FSRef * inObjectRef, FSVolumeRefNum * outVolumeRefNum ) ;OSStatus		FSSetIsStationery ( const FSRef * inFileRef, Boolean inStationeryFlag ) ;/* From WEDemoNavDialogs.c */OSStatus		DoOpen ( void ) ;OSStatus		DoSaveAs ( Document * inDocument, Boolean inCloseAfterSaving ) ;OSStatus		DoClose ( NavAskSaveChangesAction, SavingOption inSavingOption, Document * inDocument ) ;/* From WEDemoPrinting.c */OSStatus		DoPageSetup ( Document * inDocument ) ;OSStatus		DoPrint ( Document * inDocument ) ;/* From WEDemoScripting.c */OSStatus		GetAEDescDataAsHandle ( const AEDesc * inDesc, Handle * outHandle ) ;OSStatus		GetContentsOfSelection ( DescType, AEDesc *, WEReference ) ;OSStatus		SetContentsOfSelection ( const AEDesc *, WEReference ) ;OSStatus		InstallCoreHandlers ( void ) ;OSStatus		FindProcess ( OSType inProcessType, OSType inProcessSignature, ProcessSerialNumber * outPSN ) ;OSStatus		CreatePSNBasedAppleEvent ( const ProcessSerialNumber * inPSN, AEEventClass inEventClass, AEEventID inEventID, AppleEvent * outAE ) ;OSStatus		CreateObjectSpecifier ( const AEDesc * inContainerSpec, DescType inDesiredClass, AEKeyword inKeyForm, const AEDesc * inKeyData, AEDesc * outSpecifier ) ;OSStatus		CreatePropertySpecifier ( const AEDesc * inContainerSpec, AEKeyword inPropertyTag, AEDesc * outSpecifier ) ;OSStatus		CreateFinderObjectSpecifier ( const FSRef * inObjectRef, AEDesc * outSpecifier ) ;OSStatus		SendGetDataEvent ( const ProcessSerialNumber * inPSN, const AEDesc *, DescType, AEDesc * ) ;OSStatus		FSGetObjectIconRect ( const FSRef * inObjectRef, Rect * outIconRect ) ;/* From WEDemoWindows.c */Document *		GetWindowDocument ( WindowRef inWindow ) ;WEReference		GetWindowText ( WindowRef inWindow ) ;void			UpdateModifiedFlag ( Document * inDocument ) ;OSStatus		SetWindowTitleFromFile ( WindowRef inWindow, const FSRef * inFileRef ) ;OSStatus		CreateDocument ( const FSRef * inFileRef, Document ** outDocument ) ;void			DestroyDocument ( Document * inDocument ) ;#endif /* __WEDEMO__ */