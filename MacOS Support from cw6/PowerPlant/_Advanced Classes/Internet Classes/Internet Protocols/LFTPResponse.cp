// ===========================================================================//	LFTPResponse.cp				PowerPlant 2.1		©1996-1999 Metrowerks Inc.// ===========================================================================//// Class for handling POP3 style responses.#include <LFTPResponse.h>#include <cstring>#include <cstdlib>#include <UInternet.h>PP_Begin_Namespace_PowerPlant// ---------------------------------------------------------------------------//	¥ LFTPResponse							Default Constructor		  [public]// ---------------------------------------------------------------------------LFTPResponse::LFTPResponse(){}// ---------------------------------------------------------------------------//	¥ LFTPResponse							Constructor				  [public]// ---------------------------------------------------------------------------LFTPResponse::LFTPResponse(char * inResponse){	SetResponse(inResponse);}// ---------------------------------------------------------------------------//	¥ LFTPResponse							Copy Constructor		  [public]// ---------------------------------------------------------------------------LFTPResponse::LFTPResponse(const LFTPResponse& copyResponse)	:LInternetResponse(copyResponse){	mResponseData = copyResponse.mResponseData;}// ---------------------------------------------------------------------------//	¥ ~LFTPResponse							Destructor				  [public]// ---------------------------------------------------------------------------LFTPResponse::~LFTPResponse(){}// ---------------------------------------------------------------------------//	¥ SetResponse// ---------------------------------------------------------------------------voidLFTPResponse::SetResponse(const char * inResponse){	StPointerBlock tempResponse((SInt32) (PP_STD::strlen(inResponse) + 1), true);	PP_STD::strcpy(tempResponse, inResponse);	//Since FTP servers send mostly human readable text,	//	mResponseData contains the full text of the response	//	in case you want to display it to the user.	//We do our best in LFTPConnection::WaitResponse() to get	//	all the data for you.	mResponseData = tempResponse;	char * p = PP_STD::strtok(tempResponse, " ");	if (p) {		mResponseCode = PP_STD::atol(p);		p = PP_STD::strtok(nil, CRLF);		mResponseText = p;	}}PP_End_Namespace_PowerPlant