/*  Metrowerks Standard Library  *//*  $Date: 2000/06/13 17:58:15 $  *  $Revision: 1.1.2.7 $  *  $NoKeywords: $  * *		Copyright © 1995-2000 Metrowerks, Inc. *		All rights reserved. */ /* *	math_integral.h * *  Non-standard integral overloads for math functions * *  Not for direct client use. */#ifndef _MATH_INTEGRAL_H#define _MATH_INTEGRAL_H#include <ansi_parms.h>#if !defined(_No_Floating_Point) \  && defined(__cplusplus)        \  && __embedded_cplusplus == 0   \  && defined(__ANSI_OVERLOAD__)  \  && defined(_MSL_INTEGRAL_MATH) \  && !(__dest_os==__mac_os && defined(__FP__))/* Turn off k33d_calls since the math functions are implemented in asm and do not abide by this calling convention *//*#ifdef __INTEL__	#pragma k63d_calls off#endif*/#pragma options align=native#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import on#endif#ifdef __cplusplus	#ifdef _MSL_USING_NAMESPACE		namespace std {	#endif#endif	#define _MAKE_FOO1(func, type1)									\	inline															\	double															\	func(type1 x)													\	{																\		return func(static_cast<double>(x));						\	}	#define _MAKE_FOO2(func, type1, type2)							\	inline															\	double															\	func(type1 x, type2 y)											\	{																\		return func(static_cast<double>(x), static_cast<double>(y));\	}	_MAKE_FOO1(acos, short)	_MAKE_FOO1(acos, unsigned short)	_MAKE_FOO1(acos, int)	_MAKE_FOO1(acos, unsigned int)	_MAKE_FOO1(acos, long)	_MAKE_FOO1(acos, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(acos, long long)	_MAKE_FOO1(acos, unsigned long long)#endif	_MAKE_FOO1(asin, short)	_MAKE_FOO1(asin, unsigned short)	_MAKE_FOO1(asin, int)	_MAKE_FOO1(asin, unsigned int)	_MAKE_FOO1(asin, long)	_MAKE_FOO1(asin, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(asin, long long)	_MAKE_FOO1(asin, unsigned long long)#endif	_MAKE_FOO1(atan, short)	_MAKE_FOO1(atan, unsigned short)	_MAKE_FOO1(atan, int)	_MAKE_FOO1(atan, unsigned int)	_MAKE_FOO1(atan, long)	_MAKE_FOO1(atan, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(atan, long long)	_MAKE_FOO1(atan, unsigned long long)#endif	_MAKE_FOO2(atan2, short, short)	_MAKE_FOO2(atan2, short, unsigned short)	_MAKE_FOO2(atan2, short, int)	_MAKE_FOO2(atan2, short, unsigned int)	_MAKE_FOO2(atan2, short, long)	_MAKE_FOO2(atan2, short, unsigned long)	_MAKE_FOO2(atan2, short, float)	_MAKE_FOO2(atan2, short, double)	_MAKE_FOO2(atan2, short, long double)	_MAKE_FOO2(atan2, unsigned short, short)	_MAKE_FOO2(atan2, unsigned short, unsigned short)	_MAKE_FOO2(atan2, unsigned short, int)	_MAKE_FOO2(atan2, unsigned short, unsigned int)	_MAKE_FOO2(atan2, unsigned short, long)	_MAKE_FOO2(atan2, unsigned short, unsigned long)	_MAKE_FOO2(atan2, unsigned short, float)	_MAKE_FOO2(atan2, unsigned short, double)	_MAKE_FOO2(atan2, unsigned short, long double)	_MAKE_FOO2(atan2, int, short)	_MAKE_FOO2(atan2, int, unsigned short)	_MAKE_FOO2(atan2, int, int)	_MAKE_FOO2(atan2, int, unsigned int)	_MAKE_FOO2(atan2, int, long)	_MAKE_FOO2(atan2, int, unsigned long)	_MAKE_FOO2(atan2, int, float)	_MAKE_FOO2(atan2, int, double)	_MAKE_FOO2(atan2, int, long double)	_MAKE_FOO2(atan2, unsigned int, short)	_MAKE_FOO2(atan2, unsigned int, unsigned short)	_MAKE_FOO2(atan2, unsigned int, int)	_MAKE_FOO2(atan2, unsigned int, unsigned int)	_MAKE_FOO2(atan2, unsigned int, long)	_MAKE_FOO2(atan2, unsigned int, unsigned long)	_MAKE_FOO2(atan2, unsigned int, float)	_MAKE_FOO2(atan2, unsigned int, double)	_MAKE_FOO2(atan2, unsigned int, long double)	_MAKE_FOO2(atan2, long, short)	_MAKE_FOO2(atan2, long, unsigned short)	_MAKE_FOO2(atan2, long, int)	_MAKE_FOO2(atan2, long, unsigned int)	_MAKE_FOO2(atan2, long, long)	_MAKE_FOO2(atan2, long, unsigned long)	_MAKE_FOO2(atan2, long, float)	_MAKE_FOO2(atan2, long, double)	_MAKE_FOO2(atan2, long, long double)	_MAKE_FOO2(atan2, unsigned long, short)	_MAKE_FOO2(atan2, unsigned long, unsigned short)	_MAKE_FOO2(atan2, unsigned long, int)	_MAKE_FOO2(atan2, unsigned long, unsigned int)	_MAKE_FOO2(atan2, unsigned long, long)	_MAKE_FOO2(atan2, unsigned long, unsigned long)	_MAKE_FOO2(atan2, unsigned long, float)	_MAKE_FOO2(atan2, unsigned long, double)	_MAKE_FOO2(atan2, unsigned long, long double)	_MAKE_FOO2(atan2, double, short)	_MAKE_FOO2(atan2, double, unsigned short)	_MAKE_FOO2(atan2, double, int)	_MAKE_FOO2(atan2, double, unsigned int)	_MAKE_FOO2(atan2, double, long)	_MAKE_FOO2(atan2, double, unsigned long)	_MAKE_FOO2(atan2, double, float)	_MAKE_FOO2(atan2, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(atan2, short, long long)	_MAKE_FOO2(atan2, short, unsigned long long)	_MAKE_FOO2(atan2, unsigned short, long long)	_MAKE_FOO2(atan2, unsigned short, unsigned long long)	_MAKE_FOO2(atan2, int, long long)	_MAKE_FOO2(atan2, int, unsigned long long)	_MAKE_FOO2(atan2, unsigned int, long long)	_MAKE_FOO2(atan2, unsigned int, unsigned long long)	_MAKE_FOO2(atan2, long, long long)	_MAKE_FOO2(atan2, long, unsigned long long)	_MAKE_FOO2(atan2, unsigned long, long long)	_MAKE_FOO2(atan2, unsigned long, unsigned long long)	_MAKE_FOO2(atan2, long long, short)	_MAKE_FOO2(atan2, long long, unsigned short)	_MAKE_FOO2(atan2, long long, int)	_MAKE_FOO2(atan2, long long, unsigned int)	_MAKE_FOO2(atan2, long long, long)	_MAKE_FOO2(atan2, long long, unsigned long)	_MAKE_FOO2(atan2, long long, long long)	_MAKE_FOO2(atan2, long long, unsigned long long)	_MAKE_FOO2(atan2, long long, float)	_MAKE_FOO2(atan2, long long, double)	_MAKE_FOO2(atan2, long long, long double)	_MAKE_FOO2(atan2, unsigned long long, short)	_MAKE_FOO2(atan2, unsigned long long, unsigned short)	_MAKE_FOO2(atan2, unsigned long long, int)	_MAKE_FOO2(atan2, unsigned long long, unsigned int)	_MAKE_FOO2(atan2, unsigned long long, long)	_MAKE_FOO2(atan2, unsigned long long, unsigned long)	_MAKE_FOO2(atan2, unsigned long long, long long)	_MAKE_FOO2(atan2, unsigned long long, unsigned long long)	_MAKE_FOO2(atan2, unsigned long long, float)	_MAKE_FOO2(atan2, unsigned long long, double)	_MAKE_FOO2(atan2, unsigned long long, long double)	_MAKE_FOO2(atan2, double, long long)	_MAKE_FOO2(atan2, double, unsigned long long)#endif	_MAKE_FOO1(cos, short)	_MAKE_FOO1(cos, unsigned short)	_MAKE_FOO1(cos, int)	_MAKE_FOO1(cos, unsigned int)	_MAKE_FOO1(cos, long)	_MAKE_FOO1(cos, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(cos, long long)	_MAKE_FOO1(cos, unsigned long long)#endif	_MAKE_FOO1(sin, short)	_MAKE_FOO1(sin, unsigned short)	_MAKE_FOO1(sin, int)	_MAKE_FOO1(sin, unsigned int)	_MAKE_FOO1(sin, long)	_MAKE_FOO1(sin, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(sin, long long)	_MAKE_FOO1(sin, unsigned long long)#endif	_MAKE_FOO1(tan, short)	_MAKE_FOO1(tan, unsigned short)	_MAKE_FOO1(tan, int)	_MAKE_FOO1(tan, unsigned int)	_MAKE_FOO1(tan, long)	_MAKE_FOO1(tan, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(tan, long long)	_MAKE_FOO1(tan, unsigned long long)#endif	_MAKE_FOO1(cosh, short)	_MAKE_FOO1(cosh, unsigned short)	_MAKE_FOO1(cosh, int)	_MAKE_FOO1(cosh, unsigned int)	_MAKE_FOO1(cosh, long)	_MAKE_FOO1(cosh, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(cosh, long long)	_MAKE_FOO1(cosh, unsigned long long)#endif	_MAKE_FOO1(sinh, short)	_MAKE_FOO1(sinh, unsigned short)	_MAKE_FOO1(sinh, int)	_MAKE_FOO1(sinh, unsigned int)	_MAKE_FOO1(sinh, long)	_MAKE_FOO1(sinh, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(sinh, long long)	_MAKE_FOO1(sinh, unsigned long long)#endif	_MAKE_FOO1(tanh, short)	_MAKE_FOO1(tanh, unsigned short)	_MAKE_FOO1(tanh, int)	_MAKE_FOO1(tanh, unsigned int)	_MAKE_FOO1(tanh, long)	_MAKE_FOO1(tanh, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(tanh, long long)	_MAKE_FOO1(tanh, unsigned long long)#endif	_MAKE_FOO1(acosh, short)	_MAKE_FOO1(acosh, unsigned short)	_MAKE_FOO1(acosh, int)	_MAKE_FOO1(acosh, unsigned int)	_MAKE_FOO1(acosh, long)	_MAKE_FOO1(acosh, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(acosh, long long)	_MAKE_FOO1(acosh, unsigned long long)#endif	_MAKE_FOO1(asinh, short)	_MAKE_FOO1(asinh, unsigned short)	_MAKE_FOO1(asinh, int)	_MAKE_FOO1(asinh, unsigned int)	_MAKE_FOO1(asinh, long)	_MAKE_FOO1(asinh, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(asinh, long long)	_MAKE_FOO1(asinh, unsigned long long)#endif	_MAKE_FOO1(atanh, short)	_MAKE_FOO1(atanh, unsigned short)	_MAKE_FOO1(atanh, int)	_MAKE_FOO1(atanh, unsigned int)	_MAKE_FOO1(atanh, long)	_MAKE_FOO1(atanh, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(atanh, long long)	_MAKE_FOO1(atanh, unsigned long long)#endif	_MAKE_FOO1(exp, short)	_MAKE_FOO1(exp, unsigned short)	_MAKE_FOO1(exp, int)	_MAKE_FOO1(exp, unsigned int)	_MAKE_FOO1(exp, long)	_MAKE_FOO1(exp, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(exp, long long)	_MAKE_FOO1(exp, unsigned long long)#endif	#define _MAKE_frexp(type1)										\	inline															\	double															\	frexp(type1 x, int* exp)										\	{																\		return frexp(static_cast<double>(x), exp);					\	}	_MAKE_frexp(short)	_MAKE_frexp(unsigned short)	_MAKE_frexp(int)	_MAKE_frexp(unsigned int)	_MAKE_frexp(long)	_MAKE_frexp(unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_frexp(long long)	_MAKE_frexp(unsigned long long)#endif	#undef _MAKE_frexp	#define _MAKE_ldexp(type1)										\	inline															\	double															\	ldexp(type1 x, int exp)											\	{																\		return ldexp(static_cast<double>(x), exp);					\	}	_MAKE_ldexp(short)	_MAKE_ldexp(unsigned short)	_MAKE_ldexp(int)	_MAKE_ldexp(unsigned int)	_MAKE_ldexp(long)	_MAKE_ldexp(unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_ldexp(long long)	_MAKE_ldexp(unsigned long long)#endif	#undef _MAKE_ldexp	_MAKE_FOO1(log, short)	_MAKE_FOO1(log, unsigned short)	_MAKE_FOO1(log, int)	_MAKE_FOO1(log, unsigned int)	_MAKE_FOO1(log, long)	_MAKE_FOO1(log, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(log, long long)	_MAKE_FOO1(log, unsigned long long)#endif	_MAKE_FOO1(log10, short)	_MAKE_FOO1(log10, unsigned short)	_MAKE_FOO1(log10, int)	_MAKE_FOO1(log10, unsigned int)	_MAKE_FOO1(log10, long)	_MAKE_FOO1(log10, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(log10, long long)	_MAKE_FOO1(log10, unsigned long long)#endif	#define _MAKE_modf(type1)										\	inline															\	double															\	modf(type1 x, double* y)										\	{																\		return modf(static_cast<double>(x), y);						\	}	_MAKE_modf(short)	_MAKE_modf(unsigned short)	_MAKE_modf(int)	_MAKE_modf(unsigned int)	_MAKE_modf(long)	_MAKE_modf(unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_modf(long long)	_MAKE_modf(unsigned long long)#endif	#undef _MAKE_modf	_MAKE_FOO1(exp2, short)	_MAKE_FOO1(exp2, unsigned short)	_MAKE_FOO1(exp2, int)	_MAKE_FOO1(exp2, unsigned int)	_MAKE_FOO1(exp2, long)	_MAKE_FOO1(exp2, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(exp2, long long)	_MAKE_FOO1(exp2, unsigned long long)#endif	_MAKE_FOO1(expm1, short)	_MAKE_FOO1(expm1, unsigned short)	_MAKE_FOO1(expm1, int)	_MAKE_FOO1(expm1, unsigned int)	_MAKE_FOO1(expm1, long)	_MAKE_FOO1(expm1, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(expm1, long long)	_MAKE_FOO1(expm1, unsigned long long)#endif	_MAKE_FOO1(log1p, short)	_MAKE_FOO1(log1p, unsigned short)	_MAKE_FOO1(log1p, int)	_MAKE_FOO1(log1p, unsigned int)	_MAKE_FOO1(log1p, long)	_MAKE_FOO1(log1p, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(log1p, long long)	_MAKE_FOO1(log1p, unsigned long long)#endif	_MAKE_FOO1(log2, short)	_MAKE_FOO1(log2, unsigned short)	_MAKE_FOO1(log2, int)	_MAKE_FOO1(log2, unsigned int)	_MAKE_FOO1(log2, long)	_MAKE_FOO1(log2, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(log2, long long)	_MAKE_FOO1(log2, unsigned long long)#endif	_MAKE_FOO1(logb, short)	_MAKE_FOO1(logb, unsigned short)	_MAKE_FOO1(logb, int)	_MAKE_FOO1(logb, unsigned int)	_MAKE_FOO1(logb, long)	_MAKE_FOO1(logb, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(logb, long long)	_MAKE_FOO1(logb, unsigned long long)#endif	#define _MAKE_scalb(func, type1, type2)							\	inline															\	double															\	func(type1 x, type2 n)											\	{																\		return func(static_cast<double>(x), n);						\	}	_MAKE_scalb(scalbn, short, int)	_MAKE_scalb(scalbn, unsigned short, int)	_MAKE_scalb(scalbn, int, int)	_MAKE_scalb(scalbn, unsigned int, int)	_MAKE_scalb(scalbn, long, int)	_MAKE_scalb(scalbn, unsigned long, int)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_scalb(scalbn, long long, int)	_MAKE_scalb(scalbn, unsigned long long, int)#endif	_MAKE_scalb(scalbln, short, long)	_MAKE_scalb(scalbln, unsigned short, long)	_MAKE_scalb(scalbln, int, long)	_MAKE_scalb(scalbln, unsigned int, long)	_MAKE_scalb(scalbln, long, long)	_MAKE_scalb(scalbln, unsigned long, long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_scalb(scalbln, long long, long)	_MAKE_scalb(scalbln, unsigned long long, long)#endif	#undef _MAKE_scalb	_MAKE_FOO1(fabs, short)	_MAKE_FOO1(fabs, unsigned short)	_MAKE_FOO1(fabs, int)	_MAKE_FOO1(fabs, unsigned int)	_MAKE_FOO1(fabs, long)	_MAKE_FOO1(fabs, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(fabs, long long)	_MAKE_FOO1(fabs, unsigned long long)#endif	_MAKE_FOO2(pow, short, short)	_MAKE_FOO2(pow, short, unsigned short)	_MAKE_FOO2(pow, short, int)	_MAKE_FOO2(pow, short, unsigned int)	_MAKE_FOO2(pow, short, long)	_MAKE_FOO2(pow, short, unsigned long)	_MAKE_FOO2(pow, short, float)	_MAKE_FOO2(pow, short, double)	_MAKE_FOO2(pow, short, long double)	_MAKE_FOO2(pow, unsigned short, short)	_MAKE_FOO2(pow, unsigned short, unsigned short)	_MAKE_FOO2(pow, unsigned short, int)	_MAKE_FOO2(pow, unsigned short, unsigned int)	_MAKE_FOO2(pow, unsigned short, long)	_MAKE_FOO2(pow, unsigned short, unsigned long)	_MAKE_FOO2(pow, unsigned short, float)	_MAKE_FOO2(pow, unsigned short, double)	_MAKE_FOO2(pow, unsigned short, long double)	_MAKE_FOO2(pow, int, short)	_MAKE_FOO2(pow, int, unsigned short)	_MAKE_FOO2(pow, int, int)	_MAKE_FOO2(pow, int, unsigned int)	_MAKE_FOO2(pow, int, long)	_MAKE_FOO2(pow, int, unsigned long)	_MAKE_FOO2(pow, int, float)	_MAKE_FOO2(pow, int, double)	_MAKE_FOO2(pow, int, long double)	_MAKE_FOO2(pow, unsigned int, short)	_MAKE_FOO2(pow, unsigned int, unsigned short)	_MAKE_FOO2(pow, unsigned int, int)	_MAKE_FOO2(pow, unsigned int, unsigned int)	_MAKE_FOO2(pow, unsigned int, long)	_MAKE_FOO2(pow, unsigned int, unsigned long)	_MAKE_FOO2(pow, unsigned int, float)	_MAKE_FOO2(pow, unsigned int, double)	_MAKE_FOO2(pow, unsigned int, long double)	_MAKE_FOO2(pow, long, short)	_MAKE_FOO2(pow, long, unsigned short)	_MAKE_FOO2(pow, long, int)	_MAKE_FOO2(pow, long, unsigned int)	_MAKE_FOO2(pow, long, long)	_MAKE_FOO2(pow, long, unsigned long)	_MAKE_FOO2(pow, long, float)	_MAKE_FOO2(pow, long, double)	_MAKE_FOO2(pow, long, long double)	_MAKE_FOO2(pow, unsigned long, short)	_MAKE_FOO2(pow, unsigned long, unsigned short)	_MAKE_FOO2(pow, unsigned long, int)	_MAKE_FOO2(pow, unsigned long, unsigned int)	_MAKE_FOO2(pow, unsigned long, long)	_MAKE_FOO2(pow, unsigned long, unsigned long)	_MAKE_FOO2(pow, unsigned long, float)	_MAKE_FOO2(pow, unsigned long, double)	_MAKE_FOO2(pow, unsigned long, long double)	_MAKE_FOO2(pow, double, short)	_MAKE_FOO2(pow, double, unsigned short)	_MAKE_FOO2(pow, double, unsigned int)	_MAKE_FOO2(pow, double, long)	_MAKE_FOO2(pow, double, unsigned long)	_MAKE_FOO2(pow, double, float)	_MAKE_FOO2(pow, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(pow, short, long long)	_MAKE_FOO2(pow, short, unsigned long long)	_MAKE_FOO2(pow, unsigned short, long long)	_MAKE_FOO2(pow, unsigned short, unsigned long long)	_MAKE_FOO2(pow, int, long long)	_MAKE_FOO2(pow, int, unsigned long long)	_MAKE_FOO2(pow, unsigned int, long long)	_MAKE_FOO2(pow, unsigned int, unsigned long long)	_MAKE_FOO2(pow, long, long long)	_MAKE_FOO2(pow, long, unsigned long long)	_MAKE_FOO2(pow, unsigned long, long long)	_MAKE_FOO2(pow, unsigned long, unsigned long long)	_MAKE_FOO2(pow, long long, short)	_MAKE_FOO2(pow, long long, unsigned short)	_MAKE_FOO2(pow, long long, int)	_MAKE_FOO2(pow, long long, unsigned int)	_MAKE_FOO2(pow, long long, long)	_MAKE_FOO2(pow, long long, unsigned long)	_MAKE_FOO2(pow, long long, long long)	_MAKE_FOO2(pow, long long, unsigned long long)	_MAKE_FOO2(pow, long long, float)	_MAKE_FOO2(pow, long long, double)	_MAKE_FOO2(pow, long long, long double)	_MAKE_FOO2(pow, unsigned long long, short)	_MAKE_FOO2(pow, unsigned long long, unsigned short)	_MAKE_FOO2(pow, unsigned long long, int)	_MAKE_FOO2(pow, unsigned long long, unsigned int)	_MAKE_FOO2(pow, unsigned long long, long)	_MAKE_FOO2(pow, unsigned long long, unsigned long)	_MAKE_FOO2(pow, unsigned long long, long long)	_MAKE_FOO2(pow, unsigned long long, unsigned long long)	_MAKE_FOO2(pow, unsigned long long, float)	_MAKE_FOO2(pow, unsigned long long, double)	_MAKE_FOO2(pow, unsigned long long, long double)	_MAKE_FOO2(pow, double, long long)	_MAKE_FOO2(pow, double, unsigned long long)#endif	_MAKE_FOO1(sqrt, short)	_MAKE_FOO1(sqrt, unsigned short)	_MAKE_FOO1(sqrt, int)	_MAKE_FOO1(sqrt, unsigned int)	_MAKE_FOO1(sqrt, long)	_MAKE_FOO1(sqrt, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(sqrt, long long)	_MAKE_FOO1(sqrt, unsigned long long)#endif	_MAKE_FOO2(hypot, short, short)	_MAKE_FOO2(hypot, short, unsigned short)	_MAKE_FOO2(hypot, short, int)	_MAKE_FOO2(hypot, short, unsigned int)	_MAKE_FOO2(hypot, short, long)	_MAKE_FOO2(hypot, short, unsigned long)	_MAKE_FOO2(hypot, short, float)	_MAKE_FOO2(hypot, short, double)	_MAKE_FOO2(hypot, short, long double)	_MAKE_FOO2(hypot, unsigned short, short)	_MAKE_FOO2(hypot, unsigned short, unsigned short)	_MAKE_FOO2(hypot, unsigned short, int)	_MAKE_FOO2(hypot, unsigned short, unsigned int)	_MAKE_FOO2(hypot, unsigned short, long)	_MAKE_FOO2(hypot, unsigned short, unsigned long)	_MAKE_FOO2(hypot, unsigned short, float)	_MAKE_FOO2(hypot, unsigned short, double)	_MAKE_FOO2(hypot, unsigned short, long double)	_MAKE_FOO2(hypot, int, short)	_MAKE_FOO2(hypot, int, unsigned short)	_MAKE_FOO2(hypot, int, int)	_MAKE_FOO2(hypot, int, unsigned int)	_MAKE_FOO2(hypot, int, long)	_MAKE_FOO2(hypot, int, unsigned long)	_MAKE_FOO2(hypot, int, float)	_MAKE_FOO2(hypot, int, double)	_MAKE_FOO2(hypot, int, long double)	_MAKE_FOO2(hypot, unsigned int, short)	_MAKE_FOO2(hypot, unsigned int, unsigned short)	_MAKE_FOO2(hypot, unsigned int, int)	_MAKE_FOO2(hypot, unsigned int, unsigned int)	_MAKE_FOO2(hypot, unsigned int, long)	_MAKE_FOO2(hypot, unsigned int, unsigned long)	_MAKE_FOO2(hypot, unsigned int, float)	_MAKE_FOO2(hypot, unsigned int, double)	_MAKE_FOO2(hypot, unsigned int, long double)	_MAKE_FOO2(hypot, long, short)	_MAKE_FOO2(hypot, long, unsigned short)	_MAKE_FOO2(hypot, long, int)	_MAKE_FOO2(hypot, long, unsigned int)	_MAKE_FOO2(hypot, long, long)	_MAKE_FOO2(hypot, long, unsigned long)	_MAKE_FOO2(hypot, long, float)	_MAKE_FOO2(hypot, long, double)	_MAKE_FOO2(hypot, long, long double)	_MAKE_FOO2(hypot, unsigned long, short)	_MAKE_FOO2(hypot, unsigned long, unsigned short)	_MAKE_FOO2(hypot, unsigned long, int)	_MAKE_FOO2(hypot, unsigned long, unsigned int)	_MAKE_FOO2(hypot, unsigned long, long)	_MAKE_FOO2(hypot, unsigned long, unsigned long)	_MAKE_FOO2(hypot, unsigned long, float)	_MAKE_FOO2(hypot, unsigned long, double)	_MAKE_FOO2(hypot, unsigned long, long double)	_MAKE_FOO2(hypot, double, short)	_MAKE_FOO2(hypot, double, unsigned short)	_MAKE_FOO2(hypot, double, int)	_MAKE_FOO2(hypot, double, unsigned int)	_MAKE_FOO2(hypot, double, long)	_MAKE_FOO2(hypot, double, unsigned long)	_MAKE_FOO2(hypot, double, float)	_MAKE_FOO2(hypot, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(hypot, short, long long)	_MAKE_FOO2(hypot, short, unsigned long long)	_MAKE_FOO2(hypot, unsigned short, long long)	_MAKE_FOO2(hypot, unsigned short, unsigned long long)	_MAKE_FOO2(hypot, int, long long)	_MAKE_FOO2(hypot, int, unsigned long long)	_MAKE_FOO2(hypot, unsigned int, long long)	_MAKE_FOO2(hypot, unsigned int, unsigned long long)	_MAKE_FOO2(hypot, long, long long)	_MAKE_FOO2(hypot, long, unsigned long long)	_MAKE_FOO2(hypot, unsigned long, long long)	_MAKE_FOO2(hypot, unsigned long, unsigned long long)	_MAKE_FOO2(hypot, long long, short)	_MAKE_FOO2(hypot, long long, unsigned short)	_MAKE_FOO2(hypot, long long, int)	_MAKE_FOO2(hypot, long long, unsigned int)	_MAKE_FOO2(hypot, long long, long)	_MAKE_FOO2(hypot, long long, unsigned long)	_MAKE_FOO2(hypot, long long, long long)	_MAKE_FOO2(hypot, long long, unsigned long long)	_MAKE_FOO2(hypot, long long, float)	_MAKE_FOO2(hypot, long long, double)	_MAKE_FOO2(hypot, long long, long double)	_MAKE_FOO2(hypot, unsigned long long, short)	_MAKE_FOO2(hypot, unsigned long long, unsigned short)	_MAKE_FOO2(hypot, unsigned long long, int)	_MAKE_FOO2(hypot, unsigned long long, unsigned int)	_MAKE_FOO2(hypot, unsigned long long, long)	_MAKE_FOO2(hypot, unsigned long long, unsigned long)	_MAKE_FOO2(hypot, unsigned long long, long long)	_MAKE_FOO2(hypot, unsigned long long, unsigned long long)	_MAKE_FOO2(hypot, unsigned long long, float)	_MAKE_FOO2(hypot, unsigned long long, double)	_MAKE_FOO2(hypot, unsigned long long, long double)	_MAKE_FOO2(hypot, double, long long)	_MAKE_FOO2(hypot, double, unsigned long long)#endif	#ifndef __INTEL__		_MAKE_FOO1(erf, short)		_MAKE_FOO1(erf, unsigned short)		_MAKE_FOO1(erf, int)		_MAKE_FOO1(erf, unsigned int)		_MAKE_FOO1(erf, long)		_MAKE_FOO1(erf, unsigned long)	#ifdef __MSL_LONGLONG_SUPPORT__		_MAKE_FOO1(erf, long long)		_MAKE_FOO1(erf, unsigned long long)	#endif		_MAKE_FOO1(erfc, short)		_MAKE_FOO1(erfc, unsigned short)		_MAKE_FOO1(erfc, int)		_MAKE_FOO1(erfc, unsigned int)		_MAKE_FOO1(erfc, long)		_MAKE_FOO1(erfc, unsigned long)	#ifdef __MSL_LONGLONG_SUPPORT__		_MAKE_FOO1(erfc, long long)		_MAKE_FOO1(erfc, unsigned long long)	#endif		_MAKE_FOO1(gamma, short)		_MAKE_FOO1(gamma, unsigned short)		_MAKE_FOO1(gamma, int)		_MAKE_FOO1(gamma, unsigned int)		_MAKE_FOO1(gamma, long)		_MAKE_FOO1(gamma, unsigned long)	#ifdef __MSL_LONGLONG_SUPPORT__		_MAKE_FOO1(gamma, long long)		_MAKE_FOO1(gamma, unsigned long long)	#endif		_MAKE_FOO1(lgamma, short)		_MAKE_FOO1(lgamma, unsigned short)		_MAKE_FOO1(lgamma, int)		_MAKE_FOO1(lgamma, unsigned int)		_MAKE_FOO1(lgamma, long)		_MAKE_FOO1(lgamma, unsigned long)	#ifdef __MSL_LONGLONG_SUPPORT__		_MAKE_FOO1(lgamma, long long)		_MAKE_FOO1(lgamma, unsigned long long)	#endif		_MAKE_FOO2(nextafter, short, short)		_MAKE_FOO2(nextafter, short, unsigned short)		_MAKE_FOO2(nextafter, short, int)		_MAKE_FOO2(nextafter, short, unsigned int)		_MAKE_FOO2(nextafter, short, long)		_MAKE_FOO2(nextafter, short, unsigned long)		_MAKE_FOO2(nextafter, short, float)		_MAKE_FOO2(nextafter, short, double)		_MAKE_FOO2(nextafter, short, long double)		_MAKE_FOO2(nextafter, unsigned short, short)		_MAKE_FOO2(nextafter, unsigned short, unsigned short)		_MAKE_FOO2(nextafter, unsigned short, int)		_MAKE_FOO2(nextafter, unsigned short, unsigned int)		_MAKE_FOO2(nextafter, unsigned short, long)		_MAKE_FOO2(nextafter, unsigned short, unsigned long)		_MAKE_FOO2(nextafter, unsigned short, float)		_MAKE_FOO2(nextafter, unsigned short, double)		_MAKE_FOO2(nextafter, unsigned short, long double)		_MAKE_FOO2(nextafter, int, short)		_MAKE_FOO2(nextafter, int, unsigned short)		_MAKE_FOO2(nextafter, int, int)		_MAKE_FOO2(nextafter, int, unsigned int)		_MAKE_FOO2(nextafter, int, long)		_MAKE_FOO2(nextafter, int, unsigned long)		_MAKE_FOO2(nextafter, int, float)		_MAKE_FOO2(nextafter, int, double)		_MAKE_FOO2(nextafter, int, long double)		_MAKE_FOO2(nextafter, unsigned int, short)		_MAKE_FOO2(nextafter, unsigned int, unsigned short)		_MAKE_FOO2(nextafter, unsigned int, int)		_MAKE_FOO2(nextafter, unsigned int, unsigned int)		_MAKE_FOO2(nextafter, unsigned int, long)		_MAKE_FOO2(nextafter, unsigned int, unsigned long)		_MAKE_FOO2(nextafter, unsigned int, float)		_MAKE_FOO2(nextafter, unsigned int, double)		_MAKE_FOO2(nextafter, unsigned int, long double)		_MAKE_FOO2(nextafter, long, short)		_MAKE_FOO2(nextafter, long, unsigned short)		_MAKE_FOO2(nextafter, long, int)		_MAKE_FOO2(nextafter, long, unsigned int)		_MAKE_FOO2(nextafter, long, long)		_MAKE_FOO2(nextafter, long, unsigned long)		_MAKE_FOO2(nextafter, long, float)		_MAKE_FOO2(nextafter, long, double)		_MAKE_FOO2(nextafter, long, long double)		_MAKE_FOO2(nextafter, unsigned long, short)		_MAKE_FOO2(nextafter, unsigned long, unsigned short)		_MAKE_FOO2(nextafter, unsigned long, int)		_MAKE_FOO2(nextafter, unsigned long, unsigned int)		_MAKE_FOO2(nextafter, unsigned long, long)		_MAKE_FOO2(nextafter, unsigned long, unsigned long)		_MAKE_FOO2(nextafter, unsigned long, float)		_MAKE_FOO2(nextafter, unsigned long, double)		_MAKE_FOO2(nextafter, unsigned long, long double)		_MAKE_FOO2(nextafter, double, short)		_MAKE_FOO2(nextafter, double, unsigned short)		_MAKE_FOO2(nextafter, double, int)		_MAKE_FOO2(nextafter, double, unsigned int)		_MAKE_FOO2(nextafter, double, long)		_MAKE_FOO2(nextafter, double, unsigned long)		_MAKE_FOO2(nextafter, double, float)		_MAKE_FOO2(nextafter, double, long double)	#ifdef __MSL_LONGLONG_SUPPORT__		_MAKE_FOO2(nextafter, short, long long)		_MAKE_FOO2(nextafter, short, unsigned long long)		_MAKE_FOO2(nextafter, unsigned short, long long)		_MAKE_FOO2(nextafter, unsigned short, unsigned long long)		_MAKE_FOO2(nextafter, int, long long)		_MAKE_FOO2(nextafter, int, unsigned long long)		_MAKE_FOO2(nextafter, unsigned int, long long)		_MAKE_FOO2(nextafter, unsigned int, unsigned long long)		_MAKE_FOO2(nextafter, long, long long)		_MAKE_FOO2(nextafter, long, unsigned long long)		_MAKE_FOO2(nextafter, unsigned long, long long)		_MAKE_FOO2(nextafter, unsigned long, unsigned long long)		_MAKE_FOO2(nextafter, long long, short)		_MAKE_FOO2(nextafter, long long, unsigned short)		_MAKE_FOO2(nextafter, long long, int)		_MAKE_FOO2(nextafter, long long, unsigned int)		_MAKE_FOO2(nextafter, long long, long)		_MAKE_FOO2(nextafter, long long, unsigned long)		_MAKE_FOO2(nextafter, long long, long long)		_MAKE_FOO2(nextafter, long long, unsigned long long)		_MAKE_FOO2(nextafter, long long, float)		_MAKE_FOO2(nextafter, long long, double)		_MAKE_FOO2(nextafter, long long, long double)		_MAKE_FOO2(nextafter, unsigned long long, short)		_MAKE_FOO2(nextafter, unsigned long long, unsigned short)		_MAKE_FOO2(nextafter, unsigned long long, int)		_MAKE_FOO2(nextafter, unsigned long long, unsigned int)		_MAKE_FOO2(nextafter, unsigned long long, long)		_MAKE_FOO2(nextafter, unsigned long long, unsigned long)		_MAKE_FOO2(nextafter, unsigned long long, long long)		_MAKE_FOO2(nextafter, unsigned long long, unsigned long long)		_MAKE_FOO2(nextafter, unsigned long long, float)		_MAKE_FOO2(nextafter, unsigned long long, double)		_MAKE_FOO2(nextafter, unsigned long long, long double)		_MAKE_FOO2(nextafter, double, long long)		_MAKE_FOO2(nextafter, double, unsigned long long)	#endif	#endif	_MAKE_FOO1(ceil, short)	_MAKE_FOO1(ceil, unsigned short)	_MAKE_FOO1(ceil, int)	_MAKE_FOO1(ceil, unsigned int)	_MAKE_FOO1(ceil, long)	_MAKE_FOO1(ceil, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(ceil, long long)	_MAKE_FOO1(ceil, unsigned long long)#endif	_MAKE_FOO1(floor, short)	_MAKE_FOO1(floor, unsigned short)	_MAKE_FOO1(floor, int)	_MAKE_FOO1(floor, unsigned int)	_MAKE_FOO1(floor, long)	_MAKE_FOO1(floor, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(floor, long long)	_MAKE_FOO1(floor, unsigned long long)#endif	_MAKE_FOO1(nearbyint, short)	_MAKE_FOO1(nearbyint, unsigned short)	_MAKE_FOO1(nearbyint, int)	_MAKE_FOO1(nearbyint, unsigned int)	_MAKE_FOO1(nearbyint, long)	_MAKE_FOO1(nearbyint, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(nearbyint, long long)	_MAKE_FOO1(nearbyint, unsigned long long)#endif	_MAKE_FOO1(rint, short)	_MAKE_FOO1(rint, unsigned short)	_MAKE_FOO1(rint, int)	_MAKE_FOO1(rint, unsigned int)	_MAKE_FOO1(rint, long)	_MAKE_FOO1(rint, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(rint, long long)	_MAKE_FOO1(rint, unsigned long long)#endif	#define _MAKE_BUT_RET(ret_type, func, type1)					\	inline															\	ret_type														\	func(type1 x)													\	{																\		return func(static_cast<double>(x));						\	}	_MAKE_BUT_RET(long, lrint, short)	_MAKE_BUT_RET(long, lrint, unsigned short)	_MAKE_BUT_RET(long, lrint, int)	_MAKE_BUT_RET(long, lrint, unsigned int)	_MAKE_BUT_RET(long, lrint, long)	_MAKE_BUT_RET(long, lrint, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_BUT_RET(long, lrint, long long)	_MAKE_BUT_RET(long, lrint, unsigned long long)#endif#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_BUT_RET(long long, llrint, short)	_MAKE_BUT_RET(long long, llrint, unsigned short)	_MAKE_BUT_RET(long long, llrint, int)	_MAKE_BUT_RET(long long, llrint, unsigned int)	_MAKE_BUT_RET(long long, llrint, long)	_MAKE_BUT_RET(long long, llrint, unsigned long)	_MAKE_BUT_RET(long long, llrint, long long)	_MAKE_BUT_RET(long long, llrint, unsigned long long)#endif	_MAKE_BUT_RET(long, lround, short)	_MAKE_BUT_RET(long, lround, unsigned short)	_MAKE_BUT_RET(long, lround, int)	_MAKE_BUT_RET(long, lround, unsigned int)	_MAKE_BUT_RET(long, lround, long)	_MAKE_BUT_RET(long, lround, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_BUT_RET(long, lround, long long)	_MAKE_BUT_RET(long, lround, unsigned long long)#endif#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_BUT_RET(long long, llround, short)	_MAKE_BUT_RET(long long, llround, unsigned short)	_MAKE_BUT_RET(long long, llround, int)	_MAKE_BUT_RET(long long, llround, unsigned int)	_MAKE_BUT_RET(long long, llround, long)	_MAKE_BUT_RET(long long, llround, unsigned long)	_MAKE_BUT_RET(long long, llround, long long)	_MAKE_BUT_RET(long long, llround, unsigned long long)#endif	#undef _MAKE_BUT_RET	_MAKE_FOO1(round, short)	_MAKE_FOO1(round, unsigned short)	_MAKE_FOO1(round, int)	_MAKE_FOO1(round, unsigned int)	_MAKE_FOO1(round, long)	_MAKE_FOO1(round, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(round, long long)	_MAKE_FOO1(round, unsigned long long)#endif	_MAKE_FOO1(trunc, short)	_MAKE_FOO1(trunc, unsigned short)	_MAKE_FOO1(trunc, int)	_MAKE_FOO1(trunc, unsigned int)	_MAKE_FOO1(trunc, long)	_MAKE_FOO1(trunc, unsigned long)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO1(trunc, long long)	_MAKE_FOO1(trunc, unsigned long long)#endif	_MAKE_FOO2(fmod, short, short)	_MAKE_FOO2(fmod, short, unsigned short)	_MAKE_FOO2(fmod, short, int)	_MAKE_FOO2(fmod, short, unsigned int)	_MAKE_FOO2(fmod, short, long)	_MAKE_FOO2(fmod, short, unsigned long)	_MAKE_FOO2(fmod, short, float)	_MAKE_FOO2(fmod, short, double)	_MAKE_FOO2(fmod, short, long double)	_MAKE_FOO2(fmod, unsigned short, short)	_MAKE_FOO2(fmod, unsigned short, unsigned short)	_MAKE_FOO2(fmod, unsigned short, int)	_MAKE_FOO2(fmod, unsigned short, unsigned int)	_MAKE_FOO2(fmod, unsigned short, long)	_MAKE_FOO2(fmod, unsigned short, unsigned long)	_MAKE_FOO2(fmod, unsigned short, float)	_MAKE_FOO2(fmod, unsigned short, double)	_MAKE_FOO2(fmod, unsigned short, long double)	_MAKE_FOO2(fmod, int, short)	_MAKE_FOO2(fmod, int, unsigned short)	_MAKE_FOO2(fmod, int, int)	_MAKE_FOO2(fmod, int, unsigned int)	_MAKE_FOO2(fmod, int, long)	_MAKE_FOO2(fmod, int, unsigned long)	_MAKE_FOO2(fmod, int, float)	_MAKE_FOO2(fmod, int, double)	_MAKE_FOO2(fmod, int, long double)	_MAKE_FOO2(fmod, unsigned int, short)	_MAKE_FOO2(fmod, unsigned int, unsigned short)	_MAKE_FOO2(fmod, unsigned int, int)	_MAKE_FOO2(fmod, unsigned int, unsigned int)	_MAKE_FOO2(fmod, unsigned int, long)	_MAKE_FOO2(fmod, unsigned int, unsigned long)	_MAKE_FOO2(fmod, unsigned int, float)	_MAKE_FOO2(fmod, unsigned int, double)	_MAKE_FOO2(fmod, unsigned int, long double)	_MAKE_FOO2(fmod, long, short)	_MAKE_FOO2(fmod, long, unsigned short)	_MAKE_FOO2(fmod, long, int)	_MAKE_FOO2(fmod, long, unsigned int)	_MAKE_FOO2(fmod, long, long)	_MAKE_FOO2(fmod, long, unsigned long)	_MAKE_FOO2(fmod, long, float)	_MAKE_FOO2(fmod, long, double)	_MAKE_FOO2(fmod, long, long double)	_MAKE_FOO2(fmod, unsigned long, short)	_MAKE_FOO2(fmod, unsigned long, unsigned short)	_MAKE_FOO2(fmod, unsigned long, int)	_MAKE_FOO2(fmod, unsigned long, unsigned int)	_MAKE_FOO2(fmod, unsigned long, long)	_MAKE_FOO2(fmod, unsigned long, unsigned long)	_MAKE_FOO2(fmod, unsigned long, float)	_MAKE_FOO2(fmod, unsigned long, double)	_MAKE_FOO2(fmod, unsigned long, long double)	_MAKE_FOO2(fmod, double, short)	_MAKE_FOO2(fmod, double, unsigned short)	_MAKE_FOO2(fmod, double, int)	_MAKE_FOO2(fmod, double, unsigned int)	_MAKE_FOO2(fmod, double, long)	_MAKE_FOO2(fmod, double, unsigned long)	_MAKE_FOO2(fmod, double, float)	_MAKE_FOO2(fmod, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(fmod, short, long long)	_MAKE_FOO2(fmod, short, unsigned long long)	_MAKE_FOO2(fmod, unsigned short, long long)	_MAKE_FOO2(fmod, unsigned short, unsigned long long)	_MAKE_FOO2(fmod, int, long long)	_MAKE_FOO2(fmod, int, unsigned long long)	_MAKE_FOO2(fmod, unsigned int, long long)	_MAKE_FOO2(fmod, unsigned int, unsigned long long)	_MAKE_FOO2(fmod, long, long long)	_MAKE_FOO2(fmod, long, unsigned long long)	_MAKE_FOO2(fmod, unsigned long, long long)	_MAKE_FOO2(fmod, unsigned long, unsigned long long)	_MAKE_FOO2(fmod, long long, short)	_MAKE_FOO2(fmod, long long, unsigned short)	_MAKE_FOO2(fmod, long long, int)	_MAKE_FOO2(fmod, long long, unsigned int)	_MAKE_FOO2(fmod, long long, long)	_MAKE_FOO2(fmod, long long, unsigned long)	_MAKE_FOO2(fmod, long long, long long)	_MAKE_FOO2(fmod, long long, unsigned long long)	_MAKE_FOO2(fmod, long long, float)	_MAKE_FOO2(fmod, long long, double)	_MAKE_FOO2(fmod, long long, long double)	_MAKE_FOO2(fmod, unsigned long long, short)	_MAKE_FOO2(fmod, unsigned long long, unsigned short)	_MAKE_FOO2(fmod, unsigned long long, int)	_MAKE_FOO2(fmod, unsigned long long, unsigned int)	_MAKE_FOO2(fmod, unsigned long long, long)	_MAKE_FOO2(fmod, unsigned long long, unsigned long)	_MAKE_FOO2(fmod, unsigned long long, long long)	_MAKE_FOO2(fmod, unsigned long long, unsigned long long)	_MAKE_FOO2(fmod, unsigned long long, float)	_MAKE_FOO2(fmod, unsigned long long, double)	_MAKE_FOO2(fmod, unsigned long long, long double)	_MAKE_FOO2(fmod, double, long long)	_MAKE_FOO2(fmod, double, unsigned long long)#endif	_MAKE_FOO2(remainder, short, short)	_MAKE_FOO2(remainder, short, unsigned short)	_MAKE_FOO2(remainder, short, int)	_MAKE_FOO2(remainder, short, unsigned int)	_MAKE_FOO2(remainder, short, long)	_MAKE_FOO2(remainder, short, unsigned long)	_MAKE_FOO2(remainder, short, float)	_MAKE_FOO2(remainder, short, double)	_MAKE_FOO2(remainder, short, long double)	_MAKE_FOO2(remainder, unsigned short, short)	_MAKE_FOO2(remainder, unsigned short, unsigned short)	_MAKE_FOO2(remainder, unsigned short, int)	_MAKE_FOO2(remainder, unsigned short, unsigned int)	_MAKE_FOO2(remainder, unsigned short, long)	_MAKE_FOO2(remainder, unsigned short, unsigned long)	_MAKE_FOO2(remainder, unsigned short, float)	_MAKE_FOO2(remainder, unsigned short, double)	_MAKE_FOO2(remainder, unsigned short, long double)	_MAKE_FOO2(remainder, int, short)	_MAKE_FOO2(remainder, int, unsigned short)	_MAKE_FOO2(remainder, int, int)	_MAKE_FOO2(remainder, int, unsigned int)	_MAKE_FOO2(remainder, int, long)	_MAKE_FOO2(remainder, int, unsigned long)	_MAKE_FOO2(remainder, int, float)	_MAKE_FOO2(remainder, int, double)	_MAKE_FOO2(remainder, int, long double)	_MAKE_FOO2(remainder, unsigned int, short)	_MAKE_FOO2(remainder, unsigned int, unsigned short)	_MAKE_FOO2(remainder, unsigned int, int)	_MAKE_FOO2(remainder, unsigned int, unsigned int)	_MAKE_FOO2(remainder, unsigned int, long)	_MAKE_FOO2(remainder, unsigned int, unsigned long)	_MAKE_FOO2(remainder, unsigned int, float)	_MAKE_FOO2(remainder, unsigned int, double)	_MAKE_FOO2(remainder, unsigned int, long double)	_MAKE_FOO2(remainder, long, short)	_MAKE_FOO2(remainder, long, unsigned short)	_MAKE_FOO2(remainder, long, int)	_MAKE_FOO2(remainder, long, unsigned int)	_MAKE_FOO2(remainder, long, long)	_MAKE_FOO2(remainder, long, unsigned long)	_MAKE_FOO2(remainder, long, float)	_MAKE_FOO2(remainder, long, double)	_MAKE_FOO2(remainder, long, long double)	_MAKE_FOO2(remainder, unsigned long, short)	_MAKE_FOO2(remainder, unsigned long, unsigned short)	_MAKE_FOO2(remainder, unsigned long, int)	_MAKE_FOO2(remainder, unsigned long, unsigned int)	_MAKE_FOO2(remainder, unsigned long, long)	_MAKE_FOO2(remainder, unsigned long, unsigned long)	_MAKE_FOO2(remainder, unsigned long, float)	_MAKE_FOO2(remainder, unsigned long, double)	_MAKE_FOO2(remainder, unsigned long, long double)	_MAKE_FOO2(remainder, double, short)	_MAKE_FOO2(remainder, double, unsigned short)	_MAKE_FOO2(remainder, double, int)	_MAKE_FOO2(remainder, double, unsigned int)	_MAKE_FOO2(remainder, double, long)	_MAKE_FOO2(remainder, double, unsigned long)	_MAKE_FOO2(remainder, double, float)	_MAKE_FOO2(remainder, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(remainder, short, long long)	_MAKE_FOO2(remainder, short, unsigned long long)	_MAKE_FOO2(remainder, unsigned short, long long)	_MAKE_FOO2(remainder, unsigned short, unsigned long long)	_MAKE_FOO2(remainder, int, long long)	_MAKE_FOO2(remainder, int, unsigned long long)	_MAKE_FOO2(remainder, unsigned int, long long)	_MAKE_FOO2(remainder, unsigned int, unsigned long long)	_MAKE_FOO2(remainder, long, long long)	_MAKE_FOO2(remainder, long, unsigned long long)	_MAKE_FOO2(remainder, unsigned long, long long)	_MAKE_FOO2(remainder, unsigned long, unsigned long long)	_MAKE_FOO2(remainder, long long, short)	_MAKE_FOO2(remainder, long long, unsigned short)	_MAKE_FOO2(remainder, long long, int)	_MAKE_FOO2(remainder, long long, unsigned int)	_MAKE_FOO2(remainder, long long, long)	_MAKE_FOO2(remainder, long long, unsigned long)	_MAKE_FOO2(remainder, long long, long long)	_MAKE_FOO2(remainder, long long, unsigned long long)	_MAKE_FOO2(remainder, long long, float)	_MAKE_FOO2(remainder, long long, double)	_MAKE_FOO2(remainder, long long, long double)	_MAKE_FOO2(remainder, unsigned long long, short)	_MAKE_FOO2(remainder, unsigned long long, unsigned short)	_MAKE_FOO2(remainder, unsigned long long, int)	_MAKE_FOO2(remainder, unsigned long long, unsigned int)	_MAKE_FOO2(remainder, unsigned long long, long)	_MAKE_FOO2(remainder, unsigned long long, unsigned long)	_MAKE_FOO2(remainder, unsigned long long, long long)	_MAKE_FOO2(remainder, unsigned long long, unsigned long long)	_MAKE_FOO2(remainder, unsigned long long, float)	_MAKE_FOO2(remainder, unsigned long long, double)	_MAKE_FOO2(remainder, unsigned long long, long double)	_MAKE_FOO2(remainder, double, long long)	_MAKE_FOO2(remainder, double, unsigned long long)#endif	_MAKE_FOO2(copysign, short, short)	_MAKE_FOO2(copysign, short, unsigned short)	_MAKE_FOO2(copysign, short, int)	_MAKE_FOO2(copysign, short, unsigned int)	_MAKE_FOO2(copysign, short, long)	_MAKE_FOO2(copysign, short, unsigned long)	_MAKE_FOO2(copysign, short, float)	_MAKE_FOO2(copysign, short, double)	_MAKE_FOO2(copysign, short, long double)	_MAKE_FOO2(copysign, unsigned short, short)	_MAKE_FOO2(copysign, unsigned short, unsigned short)	_MAKE_FOO2(copysign, unsigned short, int)	_MAKE_FOO2(copysign, unsigned short, unsigned int)	_MAKE_FOO2(copysign, unsigned short, long)	_MAKE_FOO2(copysign, unsigned short, unsigned long)	_MAKE_FOO2(copysign, unsigned short, float)	_MAKE_FOO2(copysign, unsigned short, double)	_MAKE_FOO2(copysign, unsigned short, long double)	_MAKE_FOO2(copysign, int, short)	_MAKE_FOO2(copysign, int, unsigned short)	_MAKE_FOO2(copysign, int, int)	_MAKE_FOO2(copysign, int, unsigned int)	_MAKE_FOO2(copysign, int, long)	_MAKE_FOO2(copysign, int, unsigned long)	_MAKE_FOO2(copysign, int, float)	_MAKE_FOO2(copysign, int, double)	_MAKE_FOO2(copysign, int, long double)	_MAKE_FOO2(copysign, unsigned int, short)	_MAKE_FOO2(copysign, unsigned int, unsigned short)	_MAKE_FOO2(copysign, unsigned int, int)	_MAKE_FOO2(copysign, unsigned int, unsigned int)	_MAKE_FOO2(copysign, unsigned int, long)	_MAKE_FOO2(copysign, unsigned int, unsigned long)	_MAKE_FOO2(copysign, unsigned int, float)	_MAKE_FOO2(copysign, unsigned int, double)	_MAKE_FOO2(copysign, unsigned int, long double)	_MAKE_FOO2(copysign, long, short)	_MAKE_FOO2(copysign, long, unsigned short)	_MAKE_FOO2(copysign, long, int)	_MAKE_FOO2(copysign, long, unsigned int)	_MAKE_FOO2(copysign, long, long)	_MAKE_FOO2(copysign, long, unsigned long)	_MAKE_FOO2(copysign, long, float)	_MAKE_FOO2(copysign, long, double)	_MAKE_FOO2(copysign, long, long double)	_MAKE_FOO2(copysign, unsigned long, short)	_MAKE_FOO2(copysign, unsigned long, unsigned short)	_MAKE_FOO2(copysign, unsigned long, int)	_MAKE_FOO2(copysign, unsigned long, unsigned int)	_MAKE_FOO2(copysign, unsigned long, long)	_MAKE_FOO2(copysign, unsigned long, unsigned long)	_MAKE_FOO2(copysign, unsigned long, float)	_MAKE_FOO2(copysign, unsigned long, double)	_MAKE_FOO2(copysign, unsigned long, long double)	_MAKE_FOO2(copysign, double, short)	_MAKE_FOO2(copysign, double, unsigned short)	_MAKE_FOO2(copysign, double, int)	_MAKE_FOO2(copysign, double, unsigned int)	_MAKE_FOO2(copysign, double, long)	_MAKE_FOO2(copysign, double, unsigned long)	_MAKE_FOO2(copysign, double, float)	_MAKE_FOO2(copysign, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(copysign, short, long long)	_MAKE_FOO2(copysign, short, unsigned long long)	_MAKE_FOO2(copysign, unsigned short, long long)	_MAKE_FOO2(copysign, unsigned short, unsigned long long)	_MAKE_FOO2(copysign, int, long long)	_MAKE_FOO2(copysign, int, unsigned long long)	_MAKE_FOO2(copysign, unsigned int, long long)	_MAKE_FOO2(copysign, unsigned int, unsigned long long)	_MAKE_FOO2(copysign, long, long long)	_MAKE_FOO2(copysign, long, unsigned long long)	_MAKE_FOO2(copysign, unsigned long, long long)	_MAKE_FOO2(copysign, unsigned long, unsigned long long)	_MAKE_FOO2(copysign, long long, short)	_MAKE_FOO2(copysign, long long, unsigned short)	_MAKE_FOO2(copysign, long long, int)	_MAKE_FOO2(copysign, long long, unsigned int)	_MAKE_FOO2(copysign, long long, long)	_MAKE_FOO2(copysign, long long, unsigned long)	_MAKE_FOO2(copysign, long long, long long)	_MAKE_FOO2(copysign, long long, unsigned long long)	_MAKE_FOO2(copysign, long long, float)	_MAKE_FOO2(copysign, long long, double)	_MAKE_FOO2(copysign, long long, long double)	_MAKE_FOO2(copysign, unsigned long long, short)	_MAKE_FOO2(copysign, unsigned long long, unsigned short)	_MAKE_FOO2(copysign, unsigned long long, int)	_MAKE_FOO2(copysign, unsigned long long, unsigned int)	_MAKE_FOO2(copysign, unsigned long long, long)	_MAKE_FOO2(copysign, unsigned long long, unsigned long)	_MAKE_FOO2(copysign, unsigned long long, long long)	_MAKE_FOO2(copysign, unsigned long long, unsigned long long)	_MAKE_FOO2(copysign, unsigned long long, float)	_MAKE_FOO2(copysign, unsigned long long, double)	_MAKE_FOO2(copysign, unsigned long long, long double)	_MAKE_FOO2(copysign, double, long long)	_MAKE_FOO2(copysign, double, unsigned long long)#endif	#define _MAKE_remquo(type1, type2)										\	inline																	\	double																	\	remquo(type1 x, type2 y, int* quo)										\	{																		\		return remquo(static_cast<double>(x), static_cast<double>(y), quo);	\	}	_MAKE_remquo(short, short)	_MAKE_remquo(short, unsigned short)	_MAKE_remquo(short, int)	_MAKE_remquo(short, unsigned int)	_MAKE_remquo(short, long)	_MAKE_remquo(short, unsigned long)	_MAKE_remquo(short, float)	_MAKE_remquo(short, double)	_MAKE_remquo(short, long double)	_MAKE_remquo(unsigned short, short)	_MAKE_remquo(unsigned short, unsigned short)	_MAKE_remquo(unsigned short, int)	_MAKE_remquo(unsigned short, unsigned int)	_MAKE_remquo(unsigned short, long)	_MAKE_remquo(unsigned short, unsigned long)	_MAKE_remquo(unsigned short, float)	_MAKE_remquo(unsigned short, double)	_MAKE_remquo(unsigned short, long double)	_MAKE_remquo(int, short)	_MAKE_remquo(int, unsigned short)	_MAKE_remquo(int, int)	_MAKE_remquo(int, unsigned int)	_MAKE_remquo(int, long)	_MAKE_remquo(int, unsigned long)	_MAKE_remquo(int, float)	_MAKE_remquo(int, double)	_MAKE_remquo(int, long double)	_MAKE_remquo(unsigned int, short)	_MAKE_remquo(unsigned int, unsigned short)	_MAKE_remquo(unsigned int, int)	_MAKE_remquo(unsigned int, unsigned int)	_MAKE_remquo(unsigned int, long)	_MAKE_remquo(unsigned int, unsigned long)	_MAKE_remquo(unsigned int, float)	_MAKE_remquo(unsigned int, double)	_MAKE_remquo(unsigned int, long double)	_MAKE_remquo(long, short)	_MAKE_remquo(long, unsigned short)	_MAKE_remquo(long, int)	_MAKE_remquo(long, unsigned int)	_MAKE_remquo(long, long)	_MAKE_remquo(long, unsigned long)	_MAKE_remquo(long, float)	_MAKE_remquo(long, double)	_MAKE_remquo(long, long double)	_MAKE_remquo(unsigned long, short)	_MAKE_remquo(unsigned long, unsigned short)	_MAKE_remquo(unsigned long, int)	_MAKE_remquo(unsigned long, unsigned int)	_MAKE_remquo(unsigned long, long)	_MAKE_remquo(unsigned long, unsigned long)	_MAKE_remquo(unsigned long, float)	_MAKE_remquo(unsigned long, double)	_MAKE_remquo(unsigned long, long double)	_MAKE_remquo(double, short)	_MAKE_remquo(double, unsigned short)	_MAKE_remquo(double, int)	_MAKE_remquo(double, unsigned int)	_MAKE_remquo(double, long)	_MAKE_remquo(double, unsigned long)	_MAKE_remquo(double, float)	_MAKE_remquo(double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_remquo(short, long long)	_MAKE_remquo(short, unsigned long long)	_MAKE_remquo(unsigned short, long long)	_MAKE_remquo(unsigned short, unsigned long long)	_MAKE_remquo(int, long long)	_MAKE_remquo(int, unsigned long long)	_MAKE_remquo(unsigned int, long long)	_MAKE_remquo(unsigned int, unsigned long long)	_MAKE_remquo(long, long long)	_MAKE_remquo(long, unsigned long long)	_MAKE_remquo(unsigned long, long long)	_MAKE_remquo(unsigned long, unsigned long long)	_MAKE_remquo(long long, short)	_MAKE_remquo(long long, unsigned short)	_MAKE_remquo(long long, int)	_MAKE_remquo(long long, unsigned int)	_MAKE_remquo(long long, long)	_MAKE_remquo(long long, unsigned long)	_MAKE_remquo(long long, long long)	_MAKE_remquo(long long, unsigned long long)	_MAKE_remquo(long long, float)	_MAKE_remquo(long long, double)	_MAKE_remquo(long long, long double)	_MAKE_remquo(unsigned long long, short)	_MAKE_remquo(unsigned long long, unsigned short)	_MAKE_remquo(unsigned long long, int)	_MAKE_remquo(unsigned long long, unsigned int)	_MAKE_remquo(unsigned long long, long)	_MAKE_remquo(unsigned long long, unsigned long)	_MAKE_remquo(unsigned long long, long long)	_MAKE_remquo(unsigned long long, unsigned long long)	_MAKE_remquo(unsigned long long, float)	_MAKE_remquo(unsigned long long, double)	_MAKE_remquo(unsigned long long, long double)	_MAKE_remquo(double, long long)	_MAKE_remquo(double, unsigned long long)#endif	#undef _MAKE_remquo	_MAKE_FOO2(fdim, short, short)	_MAKE_FOO2(fdim, short, unsigned short)	_MAKE_FOO2(fdim, short, int)	_MAKE_FOO2(fdim, short, unsigned int)	_MAKE_FOO2(fdim, short, long)	_MAKE_FOO2(fdim, short, unsigned long)	_MAKE_FOO2(fdim, short, float)	_MAKE_FOO2(fdim, short, double)	_MAKE_FOO2(fdim, short, long double)	_MAKE_FOO2(fdim, unsigned short, short)	_MAKE_FOO2(fdim, unsigned short, unsigned short)	_MAKE_FOO2(fdim, unsigned short, int)	_MAKE_FOO2(fdim, unsigned short, unsigned int)	_MAKE_FOO2(fdim, unsigned short, long)	_MAKE_FOO2(fdim, unsigned short, unsigned long)	_MAKE_FOO2(fdim, unsigned short, float)	_MAKE_FOO2(fdim, unsigned short, double)	_MAKE_FOO2(fdim, unsigned short, long double)	_MAKE_FOO2(fdim, int, short)	_MAKE_FOO2(fdim, int, unsigned short)	_MAKE_FOO2(fdim, int, int)	_MAKE_FOO2(fdim, int, unsigned int)	_MAKE_FOO2(fdim, int, long)	_MAKE_FOO2(fdim, int, unsigned long)	_MAKE_FOO2(fdim, int, float)	_MAKE_FOO2(fdim, int, double)	_MAKE_FOO2(fdim, int, long double)	_MAKE_FOO2(fdim, unsigned int, short)	_MAKE_FOO2(fdim, unsigned int, unsigned short)	_MAKE_FOO2(fdim, unsigned int, int)	_MAKE_FOO2(fdim, unsigned int, unsigned int)	_MAKE_FOO2(fdim, unsigned int, long)	_MAKE_FOO2(fdim, unsigned int, unsigned long)	_MAKE_FOO2(fdim, unsigned int, float)	_MAKE_FOO2(fdim, unsigned int, double)	_MAKE_FOO2(fdim, unsigned int, long double)	_MAKE_FOO2(fdim, long, short)	_MAKE_FOO2(fdim, long, unsigned short)	_MAKE_FOO2(fdim, long, int)	_MAKE_FOO2(fdim, long, unsigned int)	_MAKE_FOO2(fdim, long, long)	_MAKE_FOO2(fdim, long, unsigned long)	_MAKE_FOO2(fdim, long, float)	_MAKE_FOO2(fdim, long, double)	_MAKE_FOO2(fdim, long, long double)	_MAKE_FOO2(fdim, unsigned long, short)	_MAKE_FOO2(fdim, unsigned long, unsigned short)	_MAKE_FOO2(fdim, unsigned long, int)	_MAKE_FOO2(fdim, unsigned long, unsigned int)	_MAKE_FOO2(fdim, unsigned long, long)	_MAKE_FOO2(fdim, unsigned long, unsigned long)	_MAKE_FOO2(fdim, unsigned long, float)	_MAKE_FOO2(fdim, unsigned long, double)	_MAKE_FOO2(fdim, unsigned long, long double)	_MAKE_FOO2(fdim, double, short)	_MAKE_FOO2(fdim, double, unsigned short)	_MAKE_FOO2(fdim, double, int)	_MAKE_FOO2(fdim, double, unsigned int)	_MAKE_FOO2(fdim, double, long)	_MAKE_FOO2(fdim, double, unsigned long)	_MAKE_FOO2(fdim, double, float)	_MAKE_FOO2(fdim, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(fdim, short, long long)	_MAKE_FOO2(fdim, short, unsigned long long)	_MAKE_FOO2(fdim, unsigned short, long long)	_MAKE_FOO2(fdim, unsigned short, unsigned long long)	_MAKE_FOO2(fdim, int, long long)	_MAKE_FOO2(fdim, int, unsigned long long)	_MAKE_FOO2(fdim, unsigned int, long long)	_MAKE_FOO2(fdim, unsigned int, unsigned long long)	_MAKE_FOO2(fdim, long, long long)	_MAKE_FOO2(fdim, long, unsigned long long)	_MAKE_FOO2(fdim, unsigned long, long long)	_MAKE_FOO2(fdim, unsigned long, unsigned long long)	_MAKE_FOO2(fdim, long long, short)	_MAKE_FOO2(fdim, long long, unsigned short)	_MAKE_FOO2(fdim, long long, int)	_MAKE_FOO2(fdim, long long, unsigned int)	_MAKE_FOO2(fdim, long long, long)	_MAKE_FOO2(fdim, long long, unsigned long)	_MAKE_FOO2(fdim, long long, long long)	_MAKE_FOO2(fdim, long long, unsigned long long)	_MAKE_FOO2(fdim, long long, float)	_MAKE_FOO2(fdim, long long, double)	_MAKE_FOO2(fdim, long long, long double)	_MAKE_FOO2(fdim, unsigned long long, short)	_MAKE_FOO2(fdim, unsigned long long, unsigned short)	_MAKE_FOO2(fdim, unsigned long long, int)	_MAKE_FOO2(fdim, unsigned long long, unsigned int)	_MAKE_FOO2(fdim, unsigned long long, long)	_MAKE_FOO2(fdim, unsigned long long, unsigned long)	_MAKE_FOO2(fdim, unsigned long long, long long)	_MAKE_FOO2(fdim, unsigned long long, unsigned long long)	_MAKE_FOO2(fdim, unsigned long long, float)	_MAKE_FOO2(fdim, unsigned long long, double)	_MAKE_FOO2(fdim, unsigned long long, long double)	_MAKE_FOO2(fdim, double, long long)	_MAKE_FOO2(fdim, double, unsigned long long)#endif	_MAKE_FOO2(fmax, short, short)	_MAKE_FOO2(fmax, short, unsigned short)	_MAKE_FOO2(fmax, short, int)	_MAKE_FOO2(fmax, short, unsigned int)	_MAKE_FOO2(fmax, short, long)	_MAKE_FOO2(fmax, short, unsigned long)	_MAKE_FOO2(fmax, short, float)	_MAKE_FOO2(fmax, short, double)	_MAKE_FOO2(fmax, short, long double)	_MAKE_FOO2(fmax, unsigned short, short)	_MAKE_FOO2(fmax, unsigned short, unsigned short)	_MAKE_FOO2(fmax, unsigned short, int)	_MAKE_FOO2(fmax, unsigned short, unsigned int)	_MAKE_FOO2(fmax, unsigned short, long)	_MAKE_FOO2(fmax, unsigned short, unsigned long)	_MAKE_FOO2(fmax, unsigned short, float)	_MAKE_FOO2(fmax, unsigned short, double)	_MAKE_FOO2(fmax, unsigned short, long double)	_MAKE_FOO2(fmax, int, short)	_MAKE_FOO2(fmax, int, unsigned short)	_MAKE_FOO2(fmax, int, int)	_MAKE_FOO2(fmax, int, unsigned int)	_MAKE_FOO2(fmax, int, long)	_MAKE_FOO2(fmax, int, unsigned long)	_MAKE_FOO2(fmax, int, float)	_MAKE_FOO2(fmax, int, double)	_MAKE_FOO2(fmax, int, long double)	_MAKE_FOO2(fmax, unsigned int, short)	_MAKE_FOO2(fmax, unsigned int, unsigned short)	_MAKE_FOO2(fmax, unsigned int, int)	_MAKE_FOO2(fmax, unsigned int, unsigned int)	_MAKE_FOO2(fmax, unsigned int, long)	_MAKE_FOO2(fmax, unsigned int, unsigned long)	_MAKE_FOO2(fmax, unsigned int, float)	_MAKE_FOO2(fmax, unsigned int, double)	_MAKE_FOO2(fmax, unsigned int, long double)	_MAKE_FOO2(fmax, long, short)	_MAKE_FOO2(fmax, long, unsigned short)	_MAKE_FOO2(fmax, long, int)	_MAKE_FOO2(fmax, long, unsigned int)	_MAKE_FOO2(fmax, long, long)	_MAKE_FOO2(fmax, long, unsigned long)	_MAKE_FOO2(fmax, long, float)	_MAKE_FOO2(fmax, long, double)	_MAKE_FOO2(fmax, long, long double)	_MAKE_FOO2(fmax, unsigned long, short)	_MAKE_FOO2(fmax, unsigned long, unsigned short)	_MAKE_FOO2(fmax, unsigned long, int)	_MAKE_FOO2(fmax, unsigned long, unsigned int)	_MAKE_FOO2(fmax, unsigned long, long)	_MAKE_FOO2(fmax, unsigned long, unsigned long)	_MAKE_FOO2(fmax, unsigned long, float)	_MAKE_FOO2(fmax, unsigned long, double)	_MAKE_FOO2(fmax, unsigned long, long double)	_MAKE_FOO2(fmax, double, short)	_MAKE_FOO2(fmax, double, unsigned short)	_MAKE_FOO2(fmax, double, int)	_MAKE_FOO2(fmax, double, unsigned int)	_MAKE_FOO2(fmax, double, long)	_MAKE_FOO2(fmax, double, unsigned long)	_MAKE_FOO2(fmax, double, float)	_MAKE_FOO2(fmax, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(fmax, short, long long)	_MAKE_FOO2(fmax, short, unsigned long long)	_MAKE_FOO2(fmax, unsigned short, long long)	_MAKE_FOO2(fmax, unsigned short, unsigned long long)	_MAKE_FOO2(fmax, int, long long)	_MAKE_FOO2(fmax, int, unsigned long long)	_MAKE_FOO2(fmax, unsigned int, long long)	_MAKE_FOO2(fmax, unsigned int, unsigned long long)	_MAKE_FOO2(fmax, long, long long)	_MAKE_FOO2(fmax, long, unsigned long long)	_MAKE_FOO2(fmax, unsigned long, long long)	_MAKE_FOO2(fmax, unsigned long, unsigned long long)	_MAKE_FOO2(fmax, long long, short)	_MAKE_FOO2(fmax, long long, unsigned short)	_MAKE_FOO2(fmax, long long, int)	_MAKE_FOO2(fmax, long long, unsigned int)	_MAKE_FOO2(fmax, long long, long)	_MAKE_FOO2(fmax, long long, unsigned long)	_MAKE_FOO2(fmax, long long, long long)	_MAKE_FOO2(fmax, long long, unsigned long long)	_MAKE_FOO2(fmax, long long, float)	_MAKE_FOO2(fmax, long long, double)	_MAKE_FOO2(fmax, long long, long double)	_MAKE_FOO2(fmax, unsigned long long, short)	_MAKE_FOO2(fmax, unsigned long long, unsigned short)	_MAKE_FOO2(fmax, unsigned long long, int)	_MAKE_FOO2(fmax, unsigned long long, unsigned int)	_MAKE_FOO2(fmax, unsigned long long, long)	_MAKE_FOO2(fmax, unsigned long long, unsigned long)	_MAKE_FOO2(fmax, unsigned long long, long long)	_MAKE_FOO2(fmax, unsigned long long, unsigned long long)	_MAKE_FOO2(fmax, unsigned long long, float)	_MAKE_FOO2(fmax, unsigned long long, double)	_MAKE_FOO2(fmax, unsigned long long, long double)	_MAKE_FOO2(fmax, double, long long)	_MAKE_FOO2(fmax, double, unsigned long long)#endif	_MAKE_FOO2(fmin, short, short)	_MAKE_FOO2(fmin, short, unsigned short)	_MAKE_FOO2(fmin, short, int)	_MAKE_FOO2(fmin, short, unsigned int)	_MAKE_FOO2(fmin, short, long)	_MAKE_FOO2(fmin, short, unsigned long)	_MAKE_FOO2(fmin, short, float)	_MAKE_FOO2(fmin, short, double)	_MAKE_FOO2(fmin, short, long double)	_MAKE_FOO2(fmin, unsigned short, short)	_MAKE_FOO2(fmin, unsigned short, unsigned short)	_MAKE_FOO2(fmin, unsigned short, int)	_MAKE_FOO2(fmin, unsigned short, unsigned int)	_MAKE_FOO2(fmin, unsigned short, long)	_MAKE_FOO2(fmin, unsigned short, unsigned long)	_MAKE_FOO2(fmin, unsigned short, float)	_MAKE_FOO2(fmin, unsigned short, double)	_MAKE_FOO2(fmin, unsigned short, long double)	_MAKE_FOO2(fmin, int, short)	_MAKE_FOO2(fmin, int, unsigned short)	_MAKE_FOO2(fmin, int, int)	_MAKE_FOO2(fmin, int, unsigned int)	_MAKE_FOO2(fmin, int, long)	_MAKE_FOO2(fmin, int, unsigned long)	_MAKE_FOO2(fmin, int, float)	_MAKE_FOO2(fmin, int, double)	_MAKE_FOO2(fmin, int, long double)	_MAKE_FOO2(fmin, unsigned int, short)	_MAKE_FOO2(fmin, unsigned int, unsigned short)	_MAKE_FOO2(fmin, unsigned int, int)	_MAKE_FOO2(fmin, unsigned int, unsigned int)	_MAKE_FOO2(fmin, unsigned int, long)	_MAKE_FOO2(fmin, unsigned int, unsigned long)	_MAKE_FOO2(fmin, unsigned int, float)	_MAKE_FOO2(fmin, unsigned int, double)	_MAKE_FOO2(fmin, unsigned int, long double)	_MAKE_FOO2(fmin, long, short)	_MAKE_FOO2(fmin, long, unsigned short)	_MAKE_FOO2(fmin, long, int)	_MAKE_FOO2(fmin, long, unsigned int)	_MAKE_FOO2(fmin, long, long)	_MAKE_FOO2(fmin, long, unsigned long)	_MAKE_FOO2(fmin, long, float)	_MAKE_FOO2(fmin, long, double)	_MAKE_FOO2(fmin, long, long double)	_MAKE_FOO2(fmin, unsigned long, short)	_MAKE_FOO2(fmin, unsigned long, unsigned short)	_MAKE_FOO2(fmin, unsigned long, int)	_MAKE_FOO2(fmin, unsigned long, unsigned int)	_MAKE_FOO2(fmin, unsigned long, long)	_MAKE_FOO2(fmin, unsigned long, unsigned long)	_MAKE_FOO2(fmin, unsigned long, float)	_MAKE_FOO2(fmin, unsigned long, double)	_MAKE_FOO2(fmin, unsigned long, long double)	_MAKE_FOO2(fmin, double, short)	_MAKE_FOO2(fmin, double, unsigned short)	_MAKE_FOO2(fmin, double, int)	_MAKE_FOO2(fmin, double, unsigned int)	_MAKE_FOO2(fmin, double, long)	_MAKE_FOO2(fmin, double, unsigned long)	_MAKE_FOO2(fmin, double, float)	_MAKE_FOO2(fmin, double, long double)#ifdef __MSL_LONGLONG_SUPPORT__	_MAKE_FOO2(fmin, short, long long)	_MAKE_FOO2(fmin, short, unsigned long long)	_MAKE_FOO2(fmin, unsigned short, long long)	_MAKE_FOO2(fmin, unsigned short, unsigned long long)	_MAKE_FOO2(fmin, int, long long)	_MAKE_FOO2(fmin, int, unsigned long long)	_MAKE_FOO2(fmin, unsigned int, long long)	_MAKE_FOO2(fmin, unsigned int, unsigned long long)	_MAKE_FOO2(fmin, long, long long)	_MAKE_FOO2(fmin, long, unsigned long long)	_MAKE_FOO2(fmin, unsigned long, long long)	_MAKE_FOO2(fmin, unsigned long, unsigned long long)	_MAKE_FOO2(fmin, long long, short)	_MAKE_FOO2(fmin, long long, unsigned short)	_MAKE_FOO2(fmin, long long, int)	_MAKE_FOO2(fmin, long long, unsigned int)	_MAKE_FOO2(fmin, long long, long)	_MAKE_FOO2(fmin, long long, unsigned long)	_MAKE_FOO2(fmin, long long, long long)	_MAKE_FOO2(fmin, long long, unsigned long long)	_MAKE_FOO2(fmin, long long, float)	_MAKE_FOO2(fmin, long long, double)	_MAKE_FOO2(fmin, long long, long double)	_MAKE_FOO2(fmin, unsigned long long, short)	_MAKE_FOO2(fmin, unsigned long long, unsigned short)	_MAKE_FOO2(fmin, unsigned long long, int)	_MAKE_FOO2(fmin, unsigned long long, unsigned int)	_MAKE_FOO2(fmin, unsigned long long, long)	_MAKE_FOO2(fmin, unsigned long long, unsigned long)	_MAKE_FOO2(fmin, unsigned long long, long long)	_MAKE_FOO2(fmin, unsigned long long, unsigned long long)	_MAKE_FOO2(fmin, unsigned long long, float)	_MAKE_FOO2(fmin, unsigned long long, double)	_MAKE_FOO2(fmin, unsigned long long, long double)	_MAKE_FOO2(fmin, double, long long)	_MAKE_FOO2(fmin, double, unsigned long long)#endif	#undef _MAKE_FOO1	#undef _MAKE_FOO2#ifdef __cplusplus	#ifdef _MSL_USING_NAMESPACE		}  /* namespace std */	#endif#endif#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import reset#endif#pragma options align=reset/*#ifdef __INTEL__	#pragma k63d_calls reset#endif*/#endif /* _No_Floating_Point ... */#endif  /* _MATH_INTEGRAL_H *//*     Change recordhh 000324 Createdhh 000331 Added (double, float) and (double, long double) combinationsmf 000400 removed integral overloads from std*/