/* ================================================================================================== * GoliathSSLCertCallback.h															    *    Goliath - a Finder like application that implements WebDAV *    Copyright (C) 1999-2002  Thomas Bednarz * *    This program is free software; you can redistribute it and/or modify *    it under the terms of the GNU General Public License as published by *    the Free Software Foundation; either version 2 of the License, or *    (at your option) any later version. * *    This program is distributed in the hope that it will be useful, *    but WITHOUT ANY WARRANTY; without even the implied warranty of *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *    GNU General Public License for more details. * *    You should have received a copy of the GNU General Public License *    along with this program; if not, write to the Free Software Foundation, *    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * *  For questions, suggestions, bug-reports, enhancement-requests etc. *  I may be contacted at: * *  tombednarz@hotmail.com * =========================================================================== */ #ifndef __GoliathSSLCertCallback_h__#define __GoliathSSLCertCallback_h__#ifndef __SSLCertificateCallback_h__#include "SSLCertificateCallback.h"#endif#include <memory>class LWindow;class GoliathSSLCertCallback : public DAVLibSSLCertificateCallback {public:	static void RegisterSSLCertCallback();		virtual ~GoliathSSLCertCallback();	virtual bool OnCertificateReceived(	const std::map<std::string, std::string>& inOwnerInfo,										const std::map<std::string, std::string>& inIssuerInfo,										const std::string& inValidFromDate,										const std::string& inValidToDate,										const std::string& inFingerprint,										bool& outAcceptOnce);	protected:	GoliathSSLCertCallback();	static std::auto_ptr<GoliathSSLCertCallback>	sCallBack;};class GoliathSSLClientCertCallback : public DAVLibClientCertificateCallback {public:	static void RegisterSSLCertCallback();		virtual bool OnSupplyClientCert(std::string& outTheCertData, std::string& outPassword);protected:	GoliathSSLClientCertCallback();	bool GetPassword(std::string& outPassword);	static std::auto_ptr<GoliathSSLClientCertCallback>	sCallBack;	};#endif