// ===========================================================================//	LAMTabsControlImp.cp		PowerPlant 2.1		©1997-1999 Metrowerks Inc.// ===========================================================================#ifdef PowerPlant_PCH	#include PowerPlant_PCH#endif#include <LAMTabsControlImp.h>#include <LView.h>#include <UAppearance.h>PP_Begin_Namespace_PowerPlant// ---------------------------------------------------------------------------//	¥ LAMTabsControlImp					Stream/Default Constructor	  [public]// ---------------------------------------------------------------------------//	Do not access inStream. It may be nil. Read Stream data in Init()LAMTabsControlImp::LAMTabsControlImp(	LStream*	inStream)	: LAMControlImp(inStream){}// ---------------------------------------------------------------------------//	¥ ~LAMTabsControlImp					Destructor				  [public]// ---------------------------------------------------------------------------LAMTabsControlImp::~LAMTabsControlImp(){}// ---------------------------------------------------------------------------//	¥ FocusImp														  [public]// ---------------------------------------------------------------------------voidLAMTabsControlImp::FocusImp(){	LAMControlImp::FocusImp();		// When drawing a TabsControl, we want the fore and back		// colors to be those of the TabsControl's SuperView, not		// of the TabsControl. This way, the area behind the tabs		// gets drawn properly.		//		// The mControlPane is actually a SubPaneControl within		// the LTabsControl view, so we must go up two levels to		// get the SuperView of the LTabsControl.	mControlPane->GetSuperView()->GetSuperView()->ApplyForeAndBackColors();}// ---------------------------------------------------------------------------//	¥ ApplyForeAndBackColors										  [public]// ---------------------------------------------------------------------------boolLAMTabsControlImp::ApplyForeAndBackColors() const{	Rect	frame;	mControlPane->CalcLocalFrameRect(frame);	SInt16	bitDepth;	bool	hasColor;	mControlPane->GetDeviceInfo(bitDepth, hasColor);	UAppearance::ApplyThemeBackground(							kThemeBackgroundTabPane,							&frame,							(IsActive() and IsEnabled()) ? kThemeStateActive									   					 : kThemeStateInactive,							bitDepth,							hasColor);	RGBColor	foreColor;	mControlPane->GetSuperView()->GetForeAndBackColors(&foreColor, nil);	::RGBForeColor(&foreColor);	return true;}PP_End_Namespace_PowerPlant