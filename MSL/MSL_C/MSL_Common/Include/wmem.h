/*  Metrowerks Standard Library  *//*  $Date: 2000/06/13 16:43:13 $  *  $Revision: 1.9.18.4 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. *//* *	mem_funcs.h */ #ifndef __wmem_funcs__#define __wmem_funcs__#include <ansi_parms.h>                 /* mm 970905*/#include <mem_funcs.h>#include <cstddef>#pragma options align=native#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import on#endif#ifdef __cplusplus	#ifdef _MSL_USING_NAMESPACE		namespace std {	#endif	extern "C" {#endif/* extern prototypes */_MSL_IMP_EXP_C wchar_t * (wmemcpy) (wchar_t * , const wchar_t * , size_t );	/* mm 980909 */_MSL_IMP_EXP_C wchar_t * (wmemmove)(wchar_t *, const wchar_t *, size_t );		/* mm 980909 */_MSL_IMP_EXP_C wchar_t * (wmemset) (wchar_t *, wchar_t , size_t );				/* mm 980909 */_MSL_IMP_EXP_C wchar_t * (wmemchr) (const wchar_t *, wchar_t , size_t );        /* mm 980909 */_MSL_IMP_EXP_C int 	  (wmemcmp) (const wchar_t * , const wchar_t * , size_t );   /* mm 980909 */#ifdef __cplusplus	} /* extern "C" */#endif#if defined(__cplusplus) && __embedded_cplusplus == 0	inline	wchar_t*	wmemchr(wchar_t* s, wchar_t c, size_t n)	{		return wmemchr(static_cast<const wchar_t*>(s), c, n);	}#endif#ifdef __cplusplus	#ifdef _MSL_USING_NAMESPACE		}	#endif#endif#if defined(__CFM68K__) && !defined(__USING_STATIC_LIBS__)	#pragma import reset#endif#pragma options align=reset#endif	/* #ifndef __wmem_funcs__ *//*     Change record * mm 970905  added include of ansi_parms.h to avoid need for prefix file * mm 980909  Corrected prototypes to refer to wchar_t* instead of void* *  991112  hh   Added non-const inlines per C++ standard. */