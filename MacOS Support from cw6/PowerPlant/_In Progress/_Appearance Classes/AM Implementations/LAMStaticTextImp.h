// ===========================================================================//	LAMStaticTextImp.h			PowerPlant 2.1		©1997-1999 Metrowerks Inc.// ===========================================================================#ifndef _H_LAMStaticTextImp#define _H_LAMStaticTextImp#pragma once#include <LControlImp.h>#include <LString.h>#if PP_Uses_Pragma_Import	#pragma import on#endifPP_Begin_Namespace_PowerPlant// ---------------------------------------------------------------------------class	LAMStaticTextImp : public LControlImp {public:						LAMStaticTextImp(								LControlPane*	inControlPane);						LAMStaticTextImp(								LStream*		inStream);	virtual				~LAMStaticTextImp();	virtual void		Init(	LControlPane*	inControlPane,								LStream*		inStream);	virtual	void		Init(	LControlPane*	inControlPane,								SInt16			inControlKind,								ConstStringPtr	inTitle = Str_Empty,								ResIDT			inTextTraitsID = 0,								SInt32			inRefCon = 0);	virtual StringPtr	GetDescriptor(								Str255			outDescriptor) const;	virtual void		SetDescriptor(								ConstStringPtr	inDescriptor);	virtual bool		GetValue(								SInt32&			outValue) const;	virtual void		SetValue(								SInt32			inValue);	virtual	ResIDT		GetTextTraitsID() const;	virtual void		SetTextTraitsID(								ResIDT			inTextTraitsID);	virtual	void		SetDataTag(								SInt16			inPartCode,								FourCharCode	inTag,								Size			inDataSize,								void*			inDataPtr );	virtual	void		GetDataTag(								SInt16			inPartCode,								FourCharCode	inTag,								Size			inBufferSize,								void*			inBuffer,								Size*			outDataSize = nil) const;	virtual void		ActivateSelf();	virtual void		DeactivateSelf();	virtual	void		EnableSelf();	virtual	void		DisableSelf();	virtual void		DrawSelf();protected:	LStr255			mText;	ResIDT			mTextTraitsID;};PP_End_Namespace_PowerPlant#if PP_Uses_Pragma_Import	#pragma import reset#endif#endif