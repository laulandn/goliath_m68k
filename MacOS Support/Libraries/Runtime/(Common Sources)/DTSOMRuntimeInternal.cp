/************************************************************************//*	Project...:	Direct-To-SOM compiler									*//*	Name......:	DTSOMRuntimeInternal.cp									*//*	Purpose...: Direct-To-SOM runtime functions							*//*  Copyright.: Copyright © 1996-2002 Metrowerks Corporation			*//************************************************************************/#pragma direct_to_som on#include <somobj.hh>#include <stddef.h>#if __cplusplusextern "C" {#endif#pragma internal onextern SOMObject *__som_new(void *classdata, long major, long minor);SOMObject *__som_new(void *classdata, long major, long minor){	SOMObject *obj;	if((obj=(SOMObject *)somNewObjectInstance(classdata,major,minor))==NULL)	{		__som_check_new(NULL);	}	return obj;}#if __POWERPC__extern __declspec(import) asm void __ptr_glue(void);extern asm void _som_ptrgl4(void);extern asm void _som_ptrgl5(void);extern asm void _som_ptrgl_(void);extern asm void _som_ptrgl4(void){	nofralloc				// 	this fcn maintains its own frame	mflr	r0				//	allocate a stack frame	stw		r31,-4(sp)	stw		r0,8(sp)	stwu	sp,-64(sp)		mr		r31,r4			//	save ev pointer across member call	bl		__ptr_glue		//	call the member	nop	lwz		r0,0(r31)		//	test (ev->_major != 0)	cmpwi	r0,0	mr		r4,r31			//	restore ev pointer	lwz		r0,72(sp)		//	tear down stack frame	addi	sp,sp,64	lwz		r31,-4(sp)	mtlr		r0	beqlr+					//	if there's no exception, return	mr		r3,r4	b		__som_check_ev	//	call __som_check_ev (ev)}extern asm void _som_ptrgl5(void){	nofralloc				//	this fcn maintains its own frame	mflr	r0				//	allocate a stack frame	stw		r31,-4(sp)	stw		r0,8(sp)	stwu	sp,-64(sp)		mr		r31,r5			//	save ev pointer across member call	bl		__ptr_glue		//	call the member	nop	lwz		r0,0(r31)		//	test (ev->_major != 0)	cmpwi	r0,0	mr		r4,r31			//	restore ev pointer	lwz		r0,72(sp)		//	tear down stack frame	addi	sp,sp,64	lwz		r31,-4(sp)	mtlr	r0	beqlr+					//	if there's no exception, return	mr		r3,r4	b		__som_check_ev	//	call __som_check_ev (ev)}extern asm void _som_ptrgl_(void){	nofralloc				// 	this fcn maintains its own frame	mflr	r0				//	allocate stack frame	stw		r0,8(sp)	stwu	sp,-64(sp)	bl		__ptr_glue		//	call the member	nop						//	saving this nop is why we're here	lwz		r0,72(sp)		//	clean up & return	addi	sp,sp,64	mtlr	r0	blr}#endif	//	__POWERPC__#if __cplusplus}#endif