/* ================================================================================================== * DAVResInfo.h															    *    Goliath - a Finder like application that implements WebDAV *    Copyright (C) 1999-2001  Thomas Bednarz * *    This program is free software; you can redistribute it and/or modify *    it under the terms of the GNU General Public License as published by *    the Free Software Foundation; either version 2 of the License, or *    (at your option) any later version. * *    This program is distributed in the hope that it will be useful, *    but WITHOUT ANY WARRANTY; without even the implied warranty of *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the *    GNU General Public License for more details. * *    You should have received a copy of the GNU General Public License *    along with this program; if not, write to the Free Software Foundation, *    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * *  For questions, suggestions, bug-reports, enhancement-requests etc. *  I may be contacted at: * *  tombednarz@hotmail.com * =========================================================================== */#ifndef __DAVRESINFO__H__#define __DAVRESINFO__H__#include <string>const short kServerId  = 128;const short kPort      = 129;const short kResource  = 129;const short kLockToken = 130;const short kLogin     = 131;const short kUserPassword  = 132;Boolean ImprintDAVInfo(FSSpec *theSpec, const char* server, const char* port,                        const char* resource, const char* locktoken,                       const char* login=NULL, const char* password = NULL);                   Boolean HasDAVResInfo(FSSpec *theSpec);    Boolean GetDAVInfoFromResource(FSSpec *theSpec, const short fieldId, std::string& outVal);Boolean GetDAVInfoFromResource(FSSpec *theSpec, std::string& outServer,                                std::string& outPort,  std::string& outResource,                                std::string& outLockToken, Boolean &mHasAuthentication,                                std::string& outLogin,  std::string& outPassword);#endif