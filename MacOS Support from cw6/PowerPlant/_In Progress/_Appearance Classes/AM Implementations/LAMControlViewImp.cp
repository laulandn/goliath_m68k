// ===========================================================================//	LAMControlViewImp.cp		PowerPlant 2.1		©1997-1999 Metrowerks Inc.// ===========================================================================////	Imp class for AM controls that are Views (rather than just Panes)#ifdef PowerPlant_PCH	#include PowerPlant_PCH#endif#include <LAMControlViewImp.h>#include <UDrawingState.h>#include <UDrawingUtils.h>#include <UEnvironment.h>#include <UQDOperators.h>#include <UTextTraits.h>PP_Begin_Namespace_PowerPlant// ---------------------------------------------------------------------------//	¥ LAMControlViewImp					Stream/Default Constructor	  [public]// ---------------------------------------------------------------------------//	Do not access inStream. It may be nil. Read Stream data in Init()LAMControlViewImp::LAMControlViewImp(	LStream*	inStream)	: LAMControlImp(inStream){}// ---------------------------------------------------------------------------//	¥ ~LAMControlViewImp					Destructor				  [public]// ---------------------------------------------------------------------------LAMControlViewImp::~LAMControlViewImp(){}// ---------------------------------------------------------------------------//	¥ SetDescriptor													  [public]// ---------------------------------------------------------------------------//	Set title of ControlViewvoidLAMControlViewImp::SetDescriptor(	ConstStringPtr	inDescriptor){		// SetControlTitle() automatically redraws the control. For		// ControlViews, this erases its contents, obscuring its		// subpanes. To workaround this, we suppress drawing when		// calling SetControlTitle(), then force a redraw of the		// entire view.	mControlPane->FocusDraw();	{		StClipRgnState	emptyClip(nil);		::SetControlTitle(mMacControlH, inDescriptor);	}	mControlPane->Draw(nil);}PP_End_Namespace_PowerPlant