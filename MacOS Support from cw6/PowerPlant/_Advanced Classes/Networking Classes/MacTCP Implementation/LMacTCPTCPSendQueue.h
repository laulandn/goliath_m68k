// ===========================================================================//	LMacTCPTCPSendQueue.h		PowerPlant 2.1		©1996-2000 Metrowerks Inc.// ===========================================================================#ifndef _H_LMacTCPTCPSendQueue#define _H_LMacTCPTCPSendQueue#pragma once#include <LInterruptSafeList.h>#include <LMacTCPTCPEndpoint.h>#include <LSendQueue.h>#include <LThread.h>#include <UMacTCPSupport.h>#if PP_Uses_Pragma_Import	#pragma import on#endifPP_Begin_Namespace_PowerPlantclass StMacTCPTCPSendOperation;class LMacTCPSendData;// ===========================================================================#pragma mark === LMacTCPTCPSendQueue ===class LMacTCPTCPSendQueue :	public LSendQueue{public:							LMacTCPTCPSendQueue(LMacTCPTCPEndpoint * inEndpoint);							~LMacTCPTCPSendQueue();protected:	virtual void			NotifyRelease(LSendData* inData);	virtual void			Int_InternalSend();	wdsEntry					mWDS[5];	LMacTCPTCPEndpoint	*		mMacTCPEndpoint;	StMacTCPTCPSendOperation *	mOperation;	friend class LMacTCPTCPEndpoint;	friend class StMacTCPTCPSendOperation;};// ===========================================================================#pragma mark -#pragma mark === StMacTCPTCPSendOperation ===class StMacTCPTCPSendOperation : public StMacTCPOperation{public:							StMacTCPTCPSendOperation(										LMacTCPTCPSendQueue * inSendQueue,										StreamPtr	inStreamPtr);							~StMacTCPTCPSendOperation();	virtual void			SetStream(StreamPtr	inStreamPtr);	virtual void			Int_AsyncResume(OSStatus	inResult);	virtual void			AbortOperation();	virtual void 			Int_AsyncRun();protected:	LMacTCPTCPSendQueue *		mMacTCPSendQueue;	friend class LMacTCPTCPSendQueue;};// ===========================================================================#pragma mark -#pragma mark === LMacTCPSendData ===class LMacTCPSendData : public LSendData{public:							LMacTCPSendData(								void*					inData,								UInt32					inDataSize,								Boolean					inExpedited)								: LSendData(inData, inDataSize)							{								mExpedited = inExpedited;							}							~LMacTCPSendData() { }	Boolean					mExpedited;};PP_End_Namespace_PowerPlant#if PP_Uses_Pragma_Import	#pragma import reset#endif#endif