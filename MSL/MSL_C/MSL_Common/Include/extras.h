#ifndef EXTRAS_H#define EXTRAS_H#if !(__dest_os == __mac_os && __MC68K__)#include <ansi_parms.h>         					/* hh 971206 */#include <size_t.h> 	#include <null.h>									/* cc 000515 */#if (__dest_os == __win32_os || __dest_os == __wince_os)	#include <extras.win32.h>#endif	#ifndef __NO_WIDE_CHAR				#include <wchar_t.h>#endif		#pragma options align=native/* #pragma direct_destruction off */  /* vss 980807 */#ifdef __cplusplus		#ifdef _MSL_USING_NAMESPACE			namespace std {		#endif		extern "C" {	#endif			_MSL_IMP_EXP_C void *			malloc(size_t);				/* mf 990715 */		_MSL_IMP_EXP_C int				raise (int  signal);		_MSL_IMP_EXP_C long 			wcstol  (const wchar_t * , wchar_t ** , int );		_MSL_IMP_EXP_C size_t 			(wcslen)(const wchar_t * str);		_MSL_IMP_EXP_C wchar_t * 		(wcscpy)(wchar_t * dst, const wchar_t * src);		#if !__MC68K__ || _No_String_Inlines						_MSL_IMP_EXP_C size_t strlen(const char * );			_MSL_IMP_EXP_C char * strcpy(char * , const char * );				#endif /* !__MC68K__ || _No_String_Inlines */			#ifdef __cplusplus      /* hh  971206 */		}		#ifdef _MSL_USING_NAMESPACE			}		#endif	#endif	#ifdef __cplusplus		extern "C" {	#endif	/* These functions are defined in extras.c */_MSL_IMP_EXP_C	int _stricmp(const char *, const char *);_MSL_IMP_EXP_C	int _strnicmp(const char *, const char *, int );_MSL_IMP_EXP_C	char * _strrev(char *);_MSL_IMP_EXP_C	char *_strupr(char *);_MSL_IMP_EXP_C	char * _strset(char *, int );_MSL_IMP_EXP_C	char * _strnset(char *, int , __std(size_t));_MSL_IMP_EXP_C	char *_strspnp(char *, const char *);				_MSL_IMP_EXP_C  int   _heapmin(void);		_MSL_IMP_EXP_C  void  _makepath(char*, const char*, const char*, const char*, const char *);		_MSL_IMP_EXP_C char * _itoa(int, char *, int);  		_MSL_IMP_EXP_C wchar_t * _itow(int, wchar_t *, int); 						_MSL_IMP_EXP_C char * _ultoa(unsigned long, char *, int); 		_MSL_IMP_EXP_C char * _strlwr (char *); 		_MSL_IMP_EXP_C void _splitpath (const char *, char *, char *, char *, char *);		_MSL_IMP_EXP_C char *_strdate(char *str);				#define _ltoa(x, y, z) _itoa(x, y, z)							/*	__inline long __myraise(long _a) {return (__std(raise)(_a));}*/				__inline char *_strdup(const char *str)		{			char * rval = (char *)__std(malloc)(__std(strlen)(str)+1);						if (rval) {				__std(strcpy)(rval, str);			}						return rval;		}					#ifndef _No_Floating_Point			_MSL_IMP_EXP_C char * _gcvt(double, int, char *); 		#endif				#define _MAX_DRIVE  3   /* max. length of drive component */		#define _MAX_DIR    256 /* max. length of path component */		#define _MAX_EXT    256 /* max. length of extension component */		#define _MAX_FNAME 256		#define __max(a,b)  (((a) > (b)) ? (a) : (b))		#define __min(a,b)  (((a) < (b)) ? (a) : (b))				/*	_MSL_IMP_EXP_C	char *_strdup(const char *); */		/*  _MSL_IMP_EXP_C    long _tell(int );*/				#ifndef __NO_WIDE_CHAR							    __inline  int  	   _wtoi(const wchar_t *_a)     {return __std(wcstol)(_a, NULL, 10);} 			_MSL_IMP_EXP_C int _wcsicmp(const wchar_t *s1, const wchar_t *s2); 			_MSL_IMP_EXP_C int _wcsnicmp(const wchar_t *s1, const wchar_t *s2, __std(size_t) n); 		    /* _MSL_IMP_EXP_C wchar_t *_itow(int val, wchar_t *str, int radix);*/ 		    _MSL_IMP_EXP_C wchar_t *_wstrrev(wchar_t * str); 			_MSL_IMP_EXP_C wchar_t *_wcsrev(wchar_t *str); 			/* _MSL_IMP_EXP_C wchar_t *_wcsdup(const wchar_t *str); */			_MSL_IMP_EXP_C wchar_t *_wcsupr(wchar_t *str);			_MSL_IMP_EXP_C wchar_t *_wcslwr(wchar_t *str); 			_MSL_IMP_EXP_C wchar_t *_wcsset(wchar_t *str, wchar_t wc); 			_MSL_IMP_EXP_C wchar_t *_wcsnset(wchar_t *str, wchar_t wc, __std(size_t) n); 			_MSL_IMP_EXP_C wchar_t *_wcsspnp(const wchar_t *s1, const wchar_t *s2); 						__inline wchar_t *_wcsdup (const wchar_t *str)			{				wchar_t * rval = (wchar_t *)__std(malloc)((__std(wcslen)(str)+1) * sizeof (wchar_t));								if (rval) {					__std(wcscpy)(rval, str);				}								return rval;			}					#endif  /* #ifndef __NO_WIDE_CHAR	*/#ifdef __cplusplus}#endif#pragma options align=reset	#endif  /* __MC68K__ */#endif  /* EXTRAS_H *//*	Change Record * 000428  cc moved _tell to extras.win32.h  * 000428  cc readded #include <unistd.h> * 000428  cc reremoved #include <unistd.h> * 000511  cc added  _heapmin to extras.h * 000516  cc moved __myraise to unix.h */ 