/*  Metrowerks Standard Library  *//*  $Date: 2000/05/19 17:49:11 $  *  $Revision: 1.4.12.8 $  *  $NoKeywords: $  * *		Copyright © 1995-1999 Metrowerks, Inc. *		All rights reserved. */ /* *	File:		stat.win32.h * *	Content:	Interface file to standard UNIX-style entry points ... * *	NB:			This file implements some UNIX low level support.  These functions *				are not guaranteed to be 100% conformant. */#ifndef	_STAT_WIN#define	_STAT_WIN#include <ansi_parms.h>          /* hh 971206 */#ifndef _TIME	#include <ctime>#endif/* *	Local typedefs for stat struct */typedef unsigned short	mode_t;/* * 960827: Microsoft has ino_t defined as an unsigned short and * dev_t defined as an unsigned int. */ /* 980113 mf-- removed #if __dest_os==win32 */                #if __dest_os==__win32_os 	#include <types.h>  /* includes microsofts definitions of _ino_t,_dev_t */	#define ino_t _ino_t	#define dev_t _dev_t#else	typedef unsigned short ino_t;	typedef unsigned int   dev_t;#endiftypedef short			nlink_t;  /* 980113 mf--changed types from long to short */typedef unsigned short	uid_t;   typedef unsigned short	gid_t;typedef long			off_t;#pragma options align=native/* #pragma direct_destruction off */  /* 980807 vss *//* *	(stat) st_mode bit values */ #define S_IREAD        S_IRUSR         /* read permission, owner */#define S_IWRITE       S_IWUSR         /* write permission, owner */#define S_IEXEC        S_IXUSR         /* execute/search permission, owner */#define _S_IWRITE 	   S_IWRITE	/* *	File type macros *//*#define S_ISBLK(m)	(((m)&(S_IFMT)) == (S_IFBLK))*/struct _stat{	mode_t		st_mode;		/* File mode; see #define's above 			*/	ino_t		st_ino;			/* File serial number 						*/	dev_t		st_dev;			/* ID of device containing this file		*/	nlink_t		st_nlink;		/* Number of links 							*/	uid_t		st_uid;			/* User ID of the file's owner 				*/	gid_t		st_gid;			/* Group ID of the file's group 			*/  /*dev_t		st_rdev; */		/* Device type , not in posix				*/	off_t		st_size;		/* File size in bytes 						*/	__std(time_t)	st_atime;		/* Time of last access 						*/	__std(time_t)	st_mtime;		/* Time of last data modification 			*/	__std(time_t)	st_ctime;		/* Time of last file status change 			*/  /*long		st_blksize;*/	/*Optimal blocksize , not in POSIX 			*/  /*long		st_blocks; */	/*blocks allocated for file, not in POSIX	*/};#ifdef _POSIXstruct stat{	mode_t		st_mode;		/* File mode; see #define's above 			*/	ino_t		st_ino;			/* File serial number 						*/	dev_t		st_dev;			/* ID of device containing this file		*/	nlink_t		st_nlink;		/* Number of links 							*/	uid_t		st_uid;			/* User ID of the file's owner 				*/	gid_t		st_gid;			/* Group ID of the file's group 			*/  /*dev_t		st_rdev; */		/* Device type , not in posix				*/	off_t		st_size;		/* File size in bytes 						*/	__std(time_t)	st_atime;		/* Time of last access 						*/	__std(time_t)	st_mtime;		/* Time of last data modification 			*/	__std(time_t)	st_ctime;		/* Time of last file status change 			*/  /*long		st_blksize;*/	/*Optimal blocksize , not in POSIX 			*/  /*long		st_blocks; */	/*blocks allocated for file, not in POSIX	*/};#endif /* _POSIX */#endif  //_STAT_WIN/*  Change History:    011398---changed stat structure types to match up             with Microsoft--namely mode_t,uid_t,guid_t             are short's instead of long's             Also made macro names match those of Microsoft.   050698--mf integrated changes for wince.   062098--mf bad #ifdef   980807--vss remove pragma  - no longer supported by compiler * mm 990107 Completed definition of file mode macros in accord with POSIX standard. MW07297 * cc 000316 added _MSL_IMP_EXP_C * cc 000518 changed time.h to ctime * hh 000518 Added __std wrappers to time_t*/                          